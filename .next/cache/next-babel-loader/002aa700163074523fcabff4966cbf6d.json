{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\";\nimport { today } from \"../../components/Today\";\nlet dayId = today; // const initialState = {category:\"\", cells:[]}\n// export default function(state = initialState, action) {\n//     switch(action.type) {\n//         case ADD_CATEGORY: {\n//             return {\n//                 ...state,\n//                 category: [...state.category, action.payload]\n//                 }\n//         }\n//         case ADD_CELL: {\n//             return {\n//                 ...state,\n//                 category: [...state.category],\n//                 cells: [...state.cells, action.payload]\n//             }\n//         }\n//         default:\n//             return state\n//     }\n// }\n\nconst initialState = {\n  day: {\n    id: \"\",\n    categories: [{\n      name: \"\",\n      cells: []\n    }]\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_CATEGORY:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          day: _objectSpread(_objectSpread({}, state.day), {}, {\n            categories: [...state.day.categories, action.payload]\n          })\n        });\n      }\n\n    case ADD_CELL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          day: _objectSpread(_objectSpread({}, state.day), {}, {\n            categories: [...state.day.categories, {\n              cells: [...action.payload]\n            }]\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","today","dayId","initialState","day","id","categories","name","cells","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,QAAgD,gBAAhD;AACA,SAAQC,KAAR,QAAoB,wBAApB;AAEA,IAAIC,KAAK,GAAGD,KAAZ,C,CAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE;AACDC,IAAAA,EAAE,EAAE,EADH;AAEDC,IAAAA,UAAU,EAAE,CACR;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADQ;AAFX;AADY,CAArB;AAYA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,YAAL;AAAmB;AACf,+CACOU,KADP;AAEIL,UAAAA,GAAG,kCACIK,KAAK,CAACL,GADV;AAECE,YAAAA,UAAU,EAAE,CACR,GAAGG,KAAK,CAACL,GAAN,CAAUE,UADL,EAERI,MAAM,CAACE,OAFC;AAFb;AAFP;AAWH;;AACD,SAAKZ,QAAL;AAAe;AACX,+CACOS,KADP;AAEIL,UAAAA,GAAG,kCACIK,KAAK,CAACL,GADV;AAECE,YAAAA,UAAU,EAAE,CACR,GAAGG,KAAK,CAACL,GAAN,CAAUE,UADL,EAER;AACIE,cAAAA,KAAK,EAAE,CACH,GAAGE,MAAM,CAACE,OADP;AADX,aAFQ;AAFb;AAFP;AAcH;;AACD;AACI,aAAOH,KAAP;AA/BR;AAkCH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\"\nimport {today} from \"../../components/Today\"\n\nlet dayId = today\n\n// const initialState = {category:\"\", cells:[]}\n\n\n// export default function(state = initialState, action) {\n//     switch(action.type) {\n//         case ADD_CATEGORY: {\n//             return {\n//                 ...state,\n//                 category: [...state.category, action.payload]\n//                 }\n//         }\n            \n//         case ADD_CELL: {\n//             return {\n//                 ...state,\n//                 category: [...state.category],\n//                 cells: [...state.cells, action.payload]\n//             }\n//         }\n//         default:\n//             return state\n//     }\n// }\n\nconst initialState = {\n    day: {\n        id: \"\",\n        categories: [\n            {\n                name: \"\",\n                cells: []\n            }\n        ]\n    }\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CATEGORY: {\n            return {\n                ...state,\n                day: {\n                    ...state.day,\n                    categories: [\n                        ...state.day.categories,\n                        action.payload\n                    ]\n                }\n            }\n            \n        }\n        case ADD_CELL: {\n            return {\n                ...state,\n                day: {\n                    ...state.day,\n                    categories: [\n                        ...state.day.categories,\n                        {\n                            cells: [\n                                ...action.payload\n                            ]\n                        }\n                    ]\n                }\n            }\n        }\n        default:\n            return state\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}