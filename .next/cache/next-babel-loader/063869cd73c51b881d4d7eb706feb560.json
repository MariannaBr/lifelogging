{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/Statistics.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport Day from \"./Day\";\nimport inputs from \"../public/inputs\";\nimport CategoryChart from \"../components/CategoryChart\";\nimport generateDefaultDays from \"../helpers/defaultDays\";\nimport { todayChart } from \"../helpers/todayDate\";\nimport simplifyDate from \"../helpers/simplifyDate\";\n\nvar selectDays = function selectDays(state) {\n  return state.categories.days;\n};\n\nfunction Statistics() {\n  _s();\n\n  var _this = this;\n\n  var storeDays = useSelector(selectDays); // Array of objects [{id:\"\", cells:[]}, {id:\"\", cells:[]}]\n\n  var storeDaysValues = Object.values(storeDays); // get array of days' ids [\"2021-1-1\", \"2021-1-2\"], inputs: data - array of objects [{}, {}]\n\n  var storeDaysIds = storeDaysValues.map(function (day) {\n    return day.id;\n  }); // get array of dates from second day to today [\"2021-1-1\", \"2021-1-2\"]\n\n  var chartDays = generateDefaultDays(new Date(storeDaysIds[0]), new Date(todayChart)); // list of columns to chart filled with 0, every cell chart gets it\n\n  var defaultDatas = chartDays.map(function (day) {\n    return {\n      x: simplifyDate(day),\n      y: 0\n    };\n  }); // const storeData = storeDaysValues.map((day) => {\n  //     return (\n  //         day.cells.map((cell) => {\n  //             return {\n  //                 name: cell,\n  //                 data: {\n  //                     x: simplifyDate(day.id),\n  //                     y: 1\n  //                 }\n  //             }\n  //         })\n  //     )\n  // })\n  // console.log(storeData)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" mt-60 mb-20 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10 text-4xl font-bold text-green-300 relative flex justify-center\",\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: inputs.categories.map(function (category) {\n        return /*#__PURE__*/_jsxDEV(CategoryChart, {\n          id: category.name,\n          color: category.color,\n          defaultCells: category.cells,\n          chartDays: chartDays,\n          defaultDatas: defaultDatas\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Statistics, \"kfibSqpD8jzgmWFU4euTDlZA5Gw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/Statistics.js"],"names":["useSelector","Day","inputs","CategoryChart","generateDefaultDays","todayChart","simplifyDate","selectDays","state","categories","days","Statistics","storeDays","storeDaysValues","Object","values","storeDaysIds","map","day","id","chartDays","Date","defaultDatas","x","y","category","name","color","cells"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,UAAN,CAAiBC,IAArB;AAAA,CAAxB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AAElB,MAAMC,SAAS,GAAGZ,WAAW,CAACO,UAAD,CAA7B,CAFkB,CAIlB;;AACA,MAAMM,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAcH,SAAd,CAAxB,CALkB,CAOlB;;AACA,MAAMI,YAAY,GAAGH,eAAe,CAACI,GAAhB,CAAoB,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,EAAb;AAAA,GAApB,CAArB,CARkB,CAUlB;;AACA,MAAMC,SAAS,GAAGhB,mBAAmB,CAAC,IAAIiB,IAAJ,CAASL,YAAY,CAAC,CAAD,CAArB,CAAD,EAA4B,IAAIK,IAAJ,CAAShB,UAAT,CAA5B,CAArC,CAXkB,CAalB;;AACA,MAAMiB,YAAY,GAAGF,SAAS,CAACH,GAAV,CAAc,UAACC,GAAD,EAAS;AACxC,WAAO;AACHK,MAAAA,CAAC,EAAEjB,YAAY,CAACY,GAAD,CADZ;AAEHM,MAAAA,CAAC,EAAE;AAFA,KAAP;AAIH,GALoB,CAArB,CAdkB,CAqBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBACKtB,MAAM,CAACO,UAAP,CAAkBQ,GAAlB,CAAsB,UAACQ,QAAD;AAAA,4BACvB,QAAC,aAAD;AAEA,UAAA,EAAE,EAAEA,QAAQ,CAACC,IAFb;AAGA,UAAA,KAAK,EAAED,QAAQ,CAACE,KAHhB;AAIA,UAAA,YAAY,EAAEF,QAAQ,CAACG,KAJvB;AAKA,UAAA,SAAS,EAAER,SALX;AAMA,UAAA,YAAY,EAAEE;AANd,WACKG,QAAQ,CAACN,EADd;AAAA;AAAA;AAAA;AAAA,iBADuB;AAAA,OAAtB;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAvDQR,U;UAEaX,W;;;KAFbW,U;AAyDT,eAAeA,UAAf","sourcesContent":["import { useSelector } from \"react-redux\"\nimport Day from \"./Day\"\nimport inputs from \"../public/inputs\"\nimport CategoryChart from \"../components/CategoryChart\"\nimport generateDefaultDays from \"../helpers/defaultDays\"\nimport { todayChart } from \"../helpers/todayDate\"\nimport simplifyDate from \"../helpers/simplifyDate\"\n\nconst selectDays = state => state.categories.days\n\nfunction Statistics() {\n\n    const storeDays = useSelector(selectDays)\n\n    // Array of objects [{id:\"\", cells:[]}, {id:\"\", cells:[]}]\n    const storeDaysValues = Object.values(storeDays)\n\n    // get array of days' ids [\"2021-1-1\", \"2021-1-2\"], inputs: data - array of objects [{}, {}]\n    const storeDaysIds = storeDaysValues.map((day) => day.id)\n\n    // get array of dates from second day to today [\"2021-1-1\", \"2021-1-2\"]\n    const chartDays = generateDefaultDays(new Date(storeDaysIds[0]), new Date(todayChart))\n\n    // list of columns to chart filled with 0, every cell chart gets it\n    const defaultDatas = chartDays.map((day) => {\n        return {\n            x: simplifyDate(day),\n            y: 0\n        }\n    })\n\n    // const storeData = storeDaysValues.map((day) => {\n    //     return (\n    //         day.cells.map((cell) => {\n    //             return {\n    //                 name: cell,\n    //                 data: {\n    //                     x: simplifyDate(day.id),\n    //                     y: 1\n    //                 }\n    //             }\n    //         })\n    //     )\n    // })\n    // console.log(storeData)\n\n    return (\n        <div className=\" mt-60 mb-20 relative\">\n            <div className=\"mb-10 text-4xl font-bold text-green-300 relative flex justify-center\">Statistics</div>\n            {/* <div className=\"relative grid grid-cols-3\">\n                {daysValues.map((day) => <Day key={day.id} id={day.id} categories={day.categories}/>)}\n            </div> */}\n            <div>\n                {inputs.categories.map((category) => \n                <CategoryChart \n                key={category.id} \n                id={category.name}\n                color={category.color}\n                defaultCells={category.cells} \n                chartDays={chartDays}\n                defaultDatas={defaultDatas} />)}\n            </div>\n        </div>\n    )\n    \n}\n\nexport default Statistics\n\n"]},"metadata":{},"sourceType":"module"}