{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/CategoryChart.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\n\nvar selectDays = function selectDays(state) {\n  return state.categories.days;\n};\n\nfunction ChartAll(props) {\n  _s();\n\n  var days = useSelector(selectDays); // Array of objects [{}, {}]\n\n  var daysValues = Object.values(days); // get array of days' ids [\"\", \"\"], inputs: data - array of objects [{}, {}]\n\n  function getDaysIds(data) {\n    var daysIds = data.map(function (day) {\n      return day.id;\n    });\n    return daysIds;\n  } // get array of categories of particular day [\"\", \"\"], inputs: day - string, data - array of objects [{}, {}]\n\n\n  function getCategoriesofDay(day, data) {\n    var categories = [];\n    data.forEach(function (item) {\n      if (item.id === day) {\n        categories = Object.values(item.categories).map(function (cat) {\n          return cat.id;\n        });\n      }\n    });\n    return categories;\n  } // get array of cells of particular category [\"\", \"\"], inputs: day - string, category - string, data(category) - array of objects [{}, {}]\n\n\n  function getCellsofCategory(day, category, data) {\n    var cells = [];\n    data.forEach(function (item) {\n      if (item.id === category) {\n        cells = Object.values(item.cells);\n      }\n    });\n    return cells;\n  } // Array of arrays of objects - categories [[{}, {}], [{}, {}]]\n  //const categoriesValues = daysValues.map((day) => Object.values(day.categories))\n  //console.log(categories)\n  // Array of arrays of ids [[\"\", \"\", \"\"], [\"\", \"\", \"\"]]\n  //const categoriesIds = categories.map((category) => category.map((cat) => cat.id))\n  //console.log(categoriesIds)\n  // Array of arrays of arrays of cells [[[\"\",\"\"],[\"\",\"\"]],[[\"\",\"\"],[\"\",\"\"]]]\n  //const cells = categories.map((category) => category.map((cat) => cat.cells))\n  //console.log(cells)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartAll, \"3tzja4VaCyvZFWXqwwNrGY7sHz8=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChartAll;\nexport default ChartAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartAll\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/CategoryChart.js"],"names":["useSelector","selectDays","state","categories","days","ChartAll","props","daysValues","Object","values","getDaysIds","data","daysIds","map","day","id","getCategoriesofDay","forEach","item","cat","getCellsofCategory","category","cells"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,UAAN,CAAiBC,IAArB;AAAA,CAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,MAAMF,IAAI,GAAGJ,WAAW,CAACC,UAAD,CAAxB,CAFqB,CAGrB;;AACA,MAAMM,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAnB,CAJqB,CAMrB;;AACA,WAASM,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,EAAb;AAAA,KAAT,CAAhB;AACA,WAAOH,OAAP;AACH,GAVoB,CAYrB;;;AACA,WAASI,kBAAT,CAA4BF,GAA5B,EAAiCH,IAAjC,EAAuC;AACnC,QAAIR,UAAU,GAAG,EAAjB;AACAQ,IAAAA,IAAI,CAACM,OAAL,CAAa,UAACC,IAAD,EAAU;AACnB,UAAIA,IAAI,CAACH,EAAL,KAAYD,GAAhB,EAAqB;AACjBX,QAAAA,UAAU,GAAGK,MAAM,CAACC,MAAP,CAAcS,IAAI,CAACf,UAAnB,EAA+BU,GAA/B,CAAmC,UAACM,GAAD;AAAA,iBAASA,GAAG,CAACJ,EAAb;AAAA,SAAnC,CAAb;AACH;AACJ,KAJD;AAKA,WAAOZ,UAAP;AACH,GArBoB,CAuBrB;;;AACA,WAASiB,kBAAT,CAA4BN,GAA5B,EAAiCO,QAAjC,EAA2CV,IAA3C,EAAiD;AAC7C,QAAIW,KAAK,GAAG,EAAZ;AACAX,IAAAA,IAAI,CAACM,OAAL,CAAa,UAACC,IAAD,EAAU;AACnB,UAAIA,IAAI,CAACH,EAAL,KAAYM,QAAhB,EAA0B;AACtBC,QAAAA,KAAK,GAAGd,MAAM,CAACC,MAAP,CAAcS,IAAI,CAACI,KAAnB,CAAR;AACH;AACJ,KAJD;AAKA,WAAOA,KAAP;AACH,GAhCoB,CAkCrB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GArDQjB,Q;UAEQL,W;;;KAFRK,Q;AAuDT,eAAeA,QAAf","sourcesContent":["import { useSelector } from \"react-redux\"\n\nconst selectDays = state => state.categories.days\n\nfunction ChartAll(props) {\n    \n    const days = useSelector(selectDays)\n    // Array of objects [{}, {}]\n    const daysValues = Object.values(days)\n\n    // get array of days' ids [\"\", \"\"], inputs: data - array of objects [{}, {}]\n    function getDaysIds(data) {\n        const daysIds = data.map((day) => day.id)\n        return daysIds\n    }\n\n    // get array of categories of particular day [\"\", \"\"], inputs: day - string, data - array of objects [{}, {}]\n    function getCategoriesofDay(day, data) {\n        let categories = []\n        data.forEach((item) => {\n            if (item.id === day) {\n                categories = Object.values(item.categories).map((cat) => cat.id)\n            }\n        })\n        return categories\n    }\n\n    // get array of cells of particular category [\"\", \"\"], inputs: day - string, category - string, data(category) - array of objects [{}, {}]\n    function getCellsofCategory(day, category, data) {\n        let cells = []\n        data.forEach((item) => {\n            if (item.id === category) {\n                cells = Object.values(item.cells)\n            }\n        })\n        return cells\n    }\n\n    // Array of arrays of objects - categories [[{}, {}], [{}, {}]]\n    //const categoriesValues = daysValues.map((day) => Object.values(day.categories))\n    //console.log(categories)\n\n    // Array of arrays of ids [[\"\", \"\", \"\"], [\"\", \"\", \"\"]]\n    //const categoriesIds = categories.map((category) => category.map((cat) => cat.id))\n    //console.log(categoriesIds)\n\n    // Array of arrays of arrays of cells [[[\"\",\"\"],[\"\",\"\"]],[[\"\",\"\"],[\"\",\"\"]]]\n    //const cells = categories.map((category) => category.map((cat) => cat.cells))\n    //console.log(cells)\n    \n\n    return (\n        <div>\n            Chart\n        </div>\n    )\n\n}\n\nexport default ChartAll"]},"metadata":{},"sourceType":"module"}