{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var getCellState = function getCellState(store) {\n  return store.cell;\n};\nexport var getCategory = function getCategory(store) {\n  return getCellState(store) ? getCellState(store).cells : [];\n};\nexport var getCellByName = function getCellByName(store, name) {\n  return getCellState(store) ? _objectSpread(_objectSpread({}, getCellState(store).cell[name]), {}, {\n    name: name\n  }) : {};\n};\nexport var getCells = function getCells(store) {\n  return getCategory(store).map(function (name) {\n    return getCellByName(store, name);\n  });\n};","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/selectors.js"],"names":["getCellState","store","cell","getCategory","cells","getCellByName","name","getCells","map"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CAA1B;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAF,KAAK;AAAA,SAAID,YAAY,CAACC,KAAD,CAAZ,GAAsBD,YAAY,CAACC,KAAD,CAAZ,CAAoBG,KAA1C,GAAkD,EAAtD;AAAA,CAAzB;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,KAAD,EAAQK,IAAR;AAAA,SAAiBN,YAAY,CAACC,KAAD,CAAZ,mCAA0BD,YAAY,CAACC,KAAD,CAAZ,CAAoBC,IAApB,CAAyBI,IAAzB,CAA1B;AAA0DA,IAAAA,IAAI,EAAJA;AAA1D,OAAkE,EAAnF;AAAA,CAAtB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAN,KAAK;AAAA,SAAIE,WAAW,CAACF,KAAD,CAAX,CAAmBO,GAAnB,CAAuB,UAAAF,IAAI;AAAA,WAAID,aAAa,CAACJ,KAAD,EAAQK,IAAR,CAAjB;AAAA,GAA3B,CAAJ;AAAA,CAAtB","sourcesContent":["export const getCellState = store => store.cell\n\nexport const getCategory = store => getCellState(store) ? getCellState(store).cells : []\n\nexport const getCellByName = (store, name) => getCellState(store) ? {...getCellState(store).cell[name], name} : {}\n\nexport const getCells = store => getCategory(store).map(name => getCellByName(store, name))"]},"metadata":{},"sourceType":"module"}