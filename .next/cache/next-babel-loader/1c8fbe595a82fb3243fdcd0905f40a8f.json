{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_DAY, ADD_CATEGORY, ADD_CELL, REMOVE_CELL } from \"../actionTypes\";\n/* STRUCTURE OF THE STATE\n\nstate = {\n    days: {\n        [day_id]: {\n            categories: {\n                [category_name]: {\n                    cells: []\n                }\n            }\n        }\n    }\n} */\n\nconst initialState = {\n  days: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_CELL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state.days), {}, {\n            [action.payload.day_id]: _objectSpread(_objectSpread({}, state.days[action.payload.day_id]), {}, {\n              categories: _objectSpread(_objectSpread({}, state.days[action.payload.day_id].categories), {}, {\n                [action.payload.category_name]: _objectSpread(_objectSpread({}, state.days[action.payload.day_id].categories[action.payload.category_name]), {}, {\n                  cells: [...state.days[action.payload.day_id].categories[action.payload.category_name].cells, action.payload.cell_name]\n                })\n              })\n            })\n          })\n        });\n      }\n\n    case REMOVE_CELL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: [...state.days, {\n            day_id: action.payload.day_id,\n            categories: [...state.categories, {\n              category_name: action.payload.category_name,\n              cells: [...state.cells, action.payload.cell_name]\n            }]\n          }]\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","REMOVE_CELL","initialState","days","state","action","type","payload","day_id","categories","category_name","cells","cell_name"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,EAA0CC,WAA1C,QAA6D,gBAA7D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,QAAL;AAAe;AACX,+CACOI,KADP;AAEID,UAAAA,IAAI,kCACGC,KAAK,CAACD,IADT;AAEA,aAACE,MAAM,CAACE,OAAP,CAAeC,MAAhB,mCACOJ,KAAK,CAACD,IAAN,CAAWE,MAAM,CAACE,OAAP,CAAeC,MAA1B,CADP;AAEIC,cAAAA,UAAU,kCACHL,KAAK,CAACD,IAAN,CAAWE,MAAM,CAACE,OAAP,CAAeC,MAA1B,EAAkCC,UAD/B;AAEN,iBAACJ,MAAM,CAACE,OAAP,CAAeG,aAAhB,mCACON,KAAK,CAACD,IAAN,CAAWE,MAAM,CAACE,OAAP,CAAeC,MAA1B,EAAkCC,UAAlC,CAA6CJ,MAAM,CAACE,OAAP,CAAeG,aAA5D,CADP;AAEIC,kBAAAA,KAAK,EAAE,CACH,GAAGP,KAAK,CAACD,IAAN,CAAWE,MAAM,CAACE,OAAP,CAAeC,MAA1B,EAAkCC,UAAlC,CAA6CJ,MAAM,CAACE,OAAP,CAAeG,aAA5D,EAA2EC,KAD3E,EAEHN,MAAM,CAACE,OAAP,CAAeK,SAFZ;AAFX;AAFM;AAFd;AAFA;AAFR;AAmBH;;AACD,SAAKX,WAAL;AAAkB;AACd,+CACOG,KADP;AAEID,UAAAA,IAAI,EAAE,CACF,GAAGC,KAAK,CAACD,IADP,EAEF;AACIK,YAAAA,MAAM,EAAEH,MAAM,CAACE,OAAP,CAAeC,MAD3B;AAEIC,YAAAA,UAAU,EAAE,CACR,GAAGL,KAAK,CAACK,UADD,EAER;AACIC,cAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG,aADlC;AAEIC,cAAAA,KAAK,EAAE,CACH,GAAGP,KAAK,CAACO,KADN,EAEHN,MAAM,CAACE,OAAP,CAAeK,SAFZ;AAFX,aAFQ;AAFhB,WAFE;AAFV;AAmBH;;AAED;AACI,aAAOR,KAAP;AA7CR;AA+CH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL, REMOVE_CELL } from \"../actionTypes\"\n\n/* STRUCTURE OF THE STATE\n\nstate = {\n    days: {\n        [day_id]: {\n            categories: {\n                [category_name]: {\n                    cells: []\n                }\n            }\n        }\n    }\n} */\n\nconst initialState = {\n    days: {}    \n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CELL: {\n            return {\n                ...state,\n                days: {\n                    ...state.days,\n                    [action.payload.day_id]: {\n                        ...state.days[action.payload.day_id],\n                        categories: {\n                            ...state.days[action.payload.day_id].categories,\n                            [action.payload.category_name]: {\n                                ...state.days[action.payload.day_id].categories[action.payload.category_name],\n                                cells: [\n                                    ...state.days[action.payload.day_id].categories[action.payload.category_name].cells,\n                                    action.payload.cell_name\n                                ]\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        case REMOVE_CELL: {\n            return {\n                ...state,\n                days: [\n                    ...state.days,\n                    {\n                        day_id: action.payload.day_id,\n                        categories: [\n                            ...state.categories,\n                            {\n                                category_name: action.payload.category_name,\n                                cells: [\n                                    ...state.cells,\n                                    action.payload.cell_name\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}