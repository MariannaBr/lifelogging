{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\";\nimport { today } from \"../../components/Today\";\nvar dayId = today;\n/* STRUCTURE OF THE STATE\n\nstate = {\n    days: [\n        {\n            day_id: \"\",\n            categories: [\n                {\n                    category_name: \"\",\n                    cells: []\n                }\n            ]\n        }\n    ]\n} */\n\nvar initialState = {};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CELL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: [].concat(_toConsumableArray(state.days), [{\n            day_id: action.payload.day_id,\n            categories: [].concat(_toConsumableArray(state.categories), [{\n              category_name: action.payload.category_name,\n              cells: [].concat(_toConsumableArray(state.cells), [action.payload.cell_name])\n            }])\n          }])\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","today","dayId","initialState","state","action","type","days","day_id","payload","categories","category_name","cells","cell_name"],"mappings":";;;;;;;AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,QAAgD,gBAAhD;AACA,SAAQC,KAAR,QAAoB,wBAApB;AAEA,IAAIC,KAAK,GAAGD,KAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAME,YAAY,GAAG,EAArB;AAEA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBD,YAAsB;AAAA,MAARE,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,QAAL;AAAe;AACX,+CACOI,KADP;AAEIG,UAAAA,IAAI,+BACGH,KAAK,CAACG,IADT,IAEA;AACIC,YAAAA,MAAM,EAAEH,MAAM,CAACI,OAAP,CAAeD,MAD3B;AAEIE,YAAAA,UAAU,+BACHN,KAAK,CAACM,UADH,IAEN;AACIC,cAAAA,aAAa,EAAEN,MAAM,CAACI,OAAP,CAAeE,aADlC;AAEIC,cAAAA,KAAK,+BACER,KAAK,CAACQ,KADR,IAEDP,MAAM,CAACI,OAAP,CAAeI,SAFd;AAFT,aAFM;AAFd,WAFA;AAFR;AAoBH;;AACD;AACI,aAAOT,KAAP;AAxBR;AA2BH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\"\nimport {today} from \"../../components/Today\"\n\nlet dayId = today\n\n/* STRUCTURE OF THE STATE\n\nstate = {\n    days: [\n        {\n            day_id: \"\",\n            categories: [\n                {\n                    category_name: \"\",\n                    cells: []\n                }\n            ]\n        }\n    ]\n} */\n\nconst initialState = {}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CELL: {\n            return {\n                ...state,\n                days: [\n                    ...state.days,\n                    {\n                        day_id: action.payload.day_id,\n                        categories: [\n                            ...state.categories,\n                            {\n                                category_name: action.payload.category_name,\n                                cells: [\n                                    ...state.cells,\n                                    action.payload.cell_name\n                                ]\n                            }\n                        ]\n                    }\n                ]\n                \n            }\n        }\n        default:\n            return state\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}