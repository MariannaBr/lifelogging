{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport { getCells } from \"../redux/selectors\";\nimport { addCell, removeCell } from \"../redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { todayChart } from \"../helpers/todayDate\";\n\nfunction Category(props) {\n  var categoryName = props.name;\n  var categoryColor = props.bg;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      SetIsOpen = _useState[1];\n\n  var dispatch = useDispatch();\n\n  function HandleClick() {\n    SetIsOpen(!isOpen);\n  }\n\n  function CellSelected(cellName, selected) {\n    dispatch(selected ? addCell(todayChart, cellName) : removeCell(todayChart, cellName));\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"relative inline-block text-left\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsxs(\"button\", {\n        type: \"button\",\n        onClick: HandleClick,\n        className: \"inline-flex justify-center w-full rounded-lg border border-gray-300 shadow-sm px-4 py-2 bg-\".concat(props.bg, \"-300 text-lg font-medium text-gray-700\\n                 hover:bg-\").concat(props.bg, \"-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-300\"),\n        id: props.id,\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"true\",\n        children: [\" \", props.name]\n      })\n    }), isOpen && /*#__PURE__*/_jsx(\"div\", {\n      className: \"origin-top-right relative right-0 mt-2 w-auto flex flex-wrap\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"py-1\",\n        role: \"menu\",\n        \"aria-orientation\": \"vertical\",\n        \"aria-labelledby\": \"options-menu\",\n        children: props.cells.map(function (cell) {\n          return /*#__PURE__*/_jsx(Cell, {\n            id: props.id,\n            name: cell.name,\n            bg: props.bg,\n            selected: CellSelected\n          }, cell.id);\n        })\n      })\n    })]\n  });\n}\n\nexport default Category;","map":null,"metadata":{},"sourceType":"module"}