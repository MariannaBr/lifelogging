{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\";\nimport { today } from \"../../components/Today\";\nlet dayId = today;\nconst initialState = [{\n  category: \"\",\n  cells: []\n}];\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_CATEGORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cats: [...state.categories, {\n          category: action.payload\n        }]\n      });\n\n    case ADD_CELL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        Categories: _objectSpread(_objectSpread({}, state.categories), {}, {\n          category: _objectSpread(_objectSpread({}, state.categories.category), {}, {\n            cells: [{\n              cell: action.payload\n            }]\n          })\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","today","dayId","initialState","category","cells","state","action","type","cats","categories","payload","Categories","cell"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,QAAgD,gBAAhD;AACA,SAAQC,KAAR,QAAoB,wBAApB;AAEA,IAAIC,KAAK,GAAGD,KAAZ;AAEA,MAAME,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAQ,EAAC,EAAV;AAAcC,EAAAA,KAAK,EAAC;AAApB,CAAD,CAArB;AAGA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,YAAL;AACI,6CACOO,KADP;AAEIG,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACI,UAAV,EACN;AACIN,UAAAA,QAAQ,EAAEG,MAAM,CAACI;AADrB,SADM;AAFV;;AAOJ,SAAKX,QAAL;AACI,6CACOM,KADP;AAEIM,QAAAA,UAAU,kCACHN,KAAK,CAACI,UADH;AAENN,UAAAA,QAAQ,kCACDE,KAAK,CAACI,UAAN,CAAiBN,QADhB;AAEJC,YAAAA,KAAK,EAAE,CACH;AACAQ,cAAAA,IAAI,EAAEN,MAAM,CAACI;AADb,aADG;AAFH;AAFF;AAFd;;AAgBJ;AACI,aAAOL,KAAP;AA3BR;AA6BH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\"\nimport {today} from \"../../components/Today\"\n\nlet dayId = today\n\nconst initialState = [{category:\"\", cells:[]}]\n\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CATEGORY:\n            return {\n                ...state,\n                cats: [...state.categories,\n                {\n                    category: action.payload\n                }]\n            }\n        case ADD_CELL:\n            return {\n                ...state,\n                Categories: {\n                    ...state.categories,\n                    category: {\n                        ...state.categories.category,\n                        cells: [\n                            {\n                            cell: action.payload\n                            }\n                            \n                        ]\n                    }\n                }\n            }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}