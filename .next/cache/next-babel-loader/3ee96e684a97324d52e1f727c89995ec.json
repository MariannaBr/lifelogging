{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_CELL, REMOVE_CELL } from \"../actionTypes\";\nimport deleteItem from \"../../helpers/deleteItem\";\nvar initialState = {\n  days: {\n    \"0\": {\n      categories: {\n        \"test\": {\n          cells: [\"test\"]\n        }\n      }\n    }\n  },\n  cells: {\n    \"test\": {\n      category: \"test\",\n      days: [\"0\"]\n    }\n  }\n};\nexport default function cellReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CELL:\n      {\n        var _state$days$dayId, _state$days$dayId2, _state$days$dayId3, _state$days$dayId3$ca, _state$cells$cellName;\n\n        var payload = action.payload;\n        var dayId = payload.dayId,\n            categoryName = payload.categoryName,\n            cellName = payload.cellName;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days), {}, _defineProperty({}, dayId, _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days[dayId]), {}, {\n            categories: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$dayId = state.days[dayId]) === null || _state$days$dayId === void 0 ? void 0 : _state$days$dayId.categories), {}, _defineProperty({}, categoryName, _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$dayId2 = state.days[dayId]) === null || _state$days$dayId2 === void 0 ? void 0 : _state$days$dayId2.categories[categoryName]), {}, {\n              cells: [].concat(_toConsumableArray((state === null || state === void 0 ? void 0 : (_state$days$dayId3 = state.days[dayId]) === null || _state$days$dayId3 === void 0 ? void 0 : (_state$days$dayId3$ca = _state$days$dayId3.categories[categoryName]) === null || _state$days$dayId3$ca === void 0 ? void 0 : _state$days$dayId3$ca.cells) || []), [cellName])\n            })))\n          }))),\n          cells: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.cells), {}, _defineProperty({}, cellName, _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.cells[cellName]), {}, {\n            category: categoryName,\n            days: [].concat(_toConsumableArray((state === null || state === void 0 ? void 0 : (_state$cells$cellName = state.cells[cellName]) === null || _state$cells$cellName === void 0 ? void 0 : _state$cells$cellName.days) || []), [dayId])\n          })))\n        });\n      }\n\n    case REMOVE_CELL:\n      {\n        var _state$days$_dayId, _state$days$_dayId2, _state$days$_dayId3, _state$days$_dayId3$c, _state$cells$_cellNam;\n\n        var _payload = action.payload;\n        var _dayId = _payload.dayId,\n            _categoryName = _payload.categoryName,\n            _cellName = _payload.cellName;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days), {}, _defineProperty({}, _dayId, _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days[_dayId]), {}, {\n            categories: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$_dayId = state.days[_dayId]) === null || _state$days$_dayId === void 0 ? void 0 : _state$days$_dayId.categories), {}, _defineProperty({}, _categoryName, _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$_dayId2 = state.days[_dayId]) === null || _state$days$_dayId2 === void 0 ? void 0 : _state$days$_dayId2.categories[_categoryName]), {}, {\n              cells: deleteItem(state === null || state === void 0 ? void 0 : (_state$days$_dayId3 = state.days[_dayId]) === null || _state$days$_dayId3 === void 0 ? void 0 : (_state$days$_dayId3$c = _state$days$_dayId3.categories[_categoryName]) === null || _state$days$_dayId3$c === void 0 ? void 0 : _state$days$_dayId3$c.cells, _cellName)\n            })))\n          }))),\n          cells: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.cells), {}, _defineProperty({}, _cellName, _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.cells[_cellName]), {}, {\n            days: deleteItem(state === null || state === void 0 ? void 0 : (_state$cells$_cellNam = state.cells[_cellName]) === null || _state$cells$_cellNam === void 0 ? void 0 : _state$cells$_cellNam.days, _dayId)\n          })))\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_CELL","REMOVE_CELL","deleteItem","initialState","days","categories","cells","category","cellReducer","state","action","type","payload","dayId","categoryName","cellName"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACF,SAAK;AACDC,MAAAA,UAAU,EAAE;AACR,gBAAQ;AACJC,UAAAA,KAAK,EAAE,CAAC,MAAD;AADH;AADA;AADX;AADH,GADW;AAUjBA,EAAAA,KAAK,EAAE;AACH,YAAQ;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJH,MAAAA,IAAI,EAAE,CAAC,GAAD;AAFF;AADL;AAVU,CAArB;AAoBA,eAAe,SAASI,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,QAAL;AAAe;AAAA;;AAAA,YACHY,OADG,GACSF,MADT,CACHE,OADG;AAAA,YAEHC,KAFG,GAE+BD,OAF/B,CAEHC,KAFG;AAAA,YAEIC,YAFJ,GAE+BF,OAF/B,CAEIE,YAFJ;AAAA,YAEkBC,QAFlB,GAE+BH,OAF/B,CAEkBG,QAFlB;AAGX,+CACON,KADP;AAEIL,UAAAA,IAAI,kCACGK,KADH,aACGA,KADH,uBACGA,KAAK,CAAEL,IADV,2BAECS,KAFD,kCAGOJ,KAHP,aAGOA,KAHP,uBAGOA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CAHP;AAIIR,YAAAA,UAAU,kCACHI,KADG,aACHA,KADG,4CACHA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CADG,sDACH,kBAAoBR,UADjB,2BAELS,YAFK,kCAGCL,KAHD,aAGCA,KAHD,6CAGCA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CAHD,uDAGC,mBAAoBR,UAApB,CAA+BS,YAA/B,CAHD;AAIFR,cAAAA,KAAK,+BACE,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,kCAAAA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,oGAAoBR,UAApB,CAA+BS,YAA/B,iFAA8CR,KAA9C,KAAuD,EADzD,IAEDS,QAFC;AAJH;AAJd,cAFR;AAkBIT,UAAAA,KAAK,kCACEG,KADF,aACEA,KADF,uBACEA,KAAK,CAAEH,KADT,2BAEAS,QAFA,kCAGMN,KAHN,aAGMA,KAHN,uBAGMA,KAAK,CAAEH,KAAP,CAAaS,QAAb,CAHN;AAIGR,YAAAA,QAAQ,EAAEO,YAJb;AAKGV,YAAAA,IAAI,+BACG,CAAAK,KAAK,SAAL,IAAAA,KAAK,WAAL,qCAAAA,KAAK,CAAEH,KAAP,CAAaS,QAAb,iFAAwBX,IAAxB,KAAgC,EADnC,IAEAS,KAFA;AALP;AAlBT;AA8BH;;AACD,SAAKZ,WAAL;AAAkB;AAAA;;AAAA,YACNW,QADM,GACMF,MADN,CACNE,OADM;AAAA,YAENC,MAFM,GAE4BD,QAF5B,CAENC,KAFM;AAAA,YAECC,aAFD,GAE4BF,QAF5B,CAECE,YAFD;AAAA,YAEeC,SAFf,GAE4BH,QAF5B,CAEeG,QAFf;AAGd,+CACON,KADP;AAEIL,UAAAA,IAAI,kCACGK,KADH,aACGA,KADH,uBACGA,KAAK,CAAEL,IADV,2BAECS,MAFD,kCAGOJ,KAHP,aAGOA,KAHP,uBAGOA,KAAK,CAAEL,IAAP,CAAYS,MAAZ,CAHP;AAIIR,YAAAA,UAAU,kCACHI,KADG,aACHA,KADG,6CACHA,KAAK,CAAEL,IAAP,CAAYS,MAAZ,CADG,uDACH,mBAAoBR,UADjB,2BAELS,aAFK,kCAGCL,KAHD,aAGCA,KAHD,8CAGCA,KAAK,CAAEL,IAAP,CAAYS,MAAZ,CAHD,wDAGC,oBAAoBR,UAApB,CAA+BS,aAA/B,CAHD;AAIFR,cAAAA,KAAK,EAAEJ,UAAU,CAACO,KAAD,aAACA,KAAD,8CAACA,KAAK,CAAEL,IAAP,CAAYS,MAAZ,CAAD,iFAAC,oBAAoBR,UAApB,CAA+BS,aAA/B,CAAD,0DAAC,sBAA8CR,KAA/C,EAAsDS,SAAtD;AAJf;AAJd,cAFR;AAeIT,UAAAA,KAAK,kCACEG,KADF,aACEA,KADF,uBACEA,KAAK,CAAEH,KADT,2BAEAS,SAFA,kCAGMN,KAHN,aAGMA,KAHN,uBAGMA,KAAK,CAAEH,KAAP,CAAaS,SAAb,CAHN;AAIGX,YAAAA,IAAI,EAAEF,UAAU,CAACO,KAAD,aAACA,KAAD,gDAACA,KAAK,CAAEH,KAAP,CAAaS,SAAb,CAAD,0DAAC,sBAAwBX,IAAzB,EAA+BS,MAA/B;AAJnB;AAfT;AAuBH;;AAED;AACI,aAAOJ,KAAP;AAhER;AAkEH","sourcesContent":["import { ADD_CELL, REMOVE_CELL } from \"../actionTypes\"\nimport deleteItem from \"../../helpers/deleteItem\"\n\nconst initialState = {\n    days: {\n        \"0\": {\n            categories: {\n                \"test\": {\n                    cells: [\"test\"]\n                }\n            }\n        }\n    },\n    cells: {\n        \"test\": {\n            category: \"test\",\n            days: [\"0\"]\n        }\n    }\n}\n\n\n\nexport default function cellReducer(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CELL: {\n            const { payload } = action\n            const { dayId, categoryName, cellName } = payload\n            return {\n                ...state,\n                days: {\n                    ...state?.days,\n                    [dayId]: {\n                        ...state?.days[dayId],\n                        categories: {\n                            ...state?.days[dayId]?.categories,\n                            [categoryName]: {\n                                ...state?.days[dayId]?.categories[categoryName],\n                                cells: [\n                                    ...state?.days[dayId]?.categories[categoryName]?.cells || [],\n                                    cellName\n                                ]\n                            }\n                        }\n                    }\n                },\n                cells: {\n                    ...state?.cells,\n                    [cellName]: {\n                        ...state?.cells[cellName],\n                        category: categoryName,\n                        days: [\n                            ...state?.cells[cellName]?.days || [],\n                            dayId\n                        ]\n                    }\n                }\n            }\n        }\n        case REMOVE_CELL: {\n            const { payload } = action\n            const { dayId, categoryName, cellName } = payload\n            return {\n                ...state,\n                days: {\n                    ...state?.days,\n                    [dayId]: {\n                        ...state?.days[dayId],\n                        categories: {\n                            ...state?.days[dayId]?.categories,\n                            [categoryName]: {\n                                ...state?.days[dayId]?.categories[categoryName],\n                                cells: deleteItem(state?.days[dayId]?.categories[categoryName]?.cells, cellName)\n                            }\n                        }\n                    }\n                },\n                cells: {\n                    ...state?.cells,\n                    [cellName]: {\n                        ...state?.cells[cellName],\n                        days: deleteItem(state?.cells[cellName]?.days, dayId)\n                    }\n                }\n            }\n        }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}