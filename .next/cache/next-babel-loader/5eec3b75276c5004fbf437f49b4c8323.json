{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/ChartAll.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\n\nvar selectDays = function selectDays(state) {\n  return state.categories.days;\n};\n\nfunction ChartAll(props) {\n  _s();\n\n  var days = useSelector(selectDays); // Array of all days [{},{},{}]\n\n  var daysValues = Object.values(days); // Array of all ids [\"\", \"\", \"\"]\n\n  var daysIds = daysValues.map(function (day) {\n    return day.id;\n  }); //console.log(daysIds)\n  // Array of arrays of objects - categories [[{}, {}], [{}, {}]]\n\n  var categories = daysValues.map(function (day) {\n    return Object.values(day.categories);\n  }); //console.log(categories)\n  // Array of arrays of ids [[\"\", \"\", \"\"], [\"\", \"\", \"\"]]\n\n  var categoriesIds = categories.map(function (category) {\n    return category.map(function (cat) {\n      return cat.id;\n    });\n  }); //console.log(categoriesIds)\n  // Array of arrays of arrays of cells [[[\"\",\"\"],[\"\",\"\"]],[[\"\",\"\"],[\"\",\"\"]]]\n\n  var cells = categories.map(function (category) {\n    return category.map(function (cat) {\n      return cat.cells;\n    });\n  }); //console.log(cells)\n\n  function getCategoryofDay(day, data) {\n    var categories = [];\n    data.forEach(function (item) {\n      console.log(\"day\", day, \"item\", item);\n\n      if (item.id === day) {\n        categories = Object.values(item.categories);\n      }\n    });\n    console.log(categories);\n    return categories;\n  }\n\n  getCategoryofDay(daysIds[1], daysValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartAll, \"3tzja4VaCyvZFWXqwwNrGY7sHz8=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChartAll;\nexport default ChartAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartAll\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/ChartAll.js"],"names":["useSelector","selectDays","state","categories","days","ChartAll","props","daysValues","Object","values","daysIds","map","day","id","categoriesIds","category","cat","cells","getCategoryofDay","data","forEach","item","console","log"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,UAAN,CAAiBC,IAArB;AAAA,CAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,MAAMF,IAAI,GAAGJ,WAAW,CAACC,UAAD,CAAxB,CAFqB,CAIrB;;AACA,MAAMM,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAnB,CALqB,CAOrB;;AACA,MAAMM,OAAO,GAAGH,UAAU,CAACI,GAAX,CAAe,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,EAAb;AAAA,GAAf,CAAhB,CARqB,CASrB;AAEA;;AACA,MAAMV,UAAU,GAAGI,UAAU,CAACI,GAAX,CAAe,UAACC,GAAD;AAAA,WAASJ,MAAM,CAACC,MAAP,CAAcG,GAAG,CAACT,UAAlB,CAAT;AAAA,GAAf,CAAnB,CAZqB,CAarB;AAEA;;AACA,MAAMW,aAAa,GAAGX,UAAU,CAACQ,GAAX,CAAe,UAACI,QAAD;AAAA,WAAcA,QAAQ,CAACJ,GAAT,CAAa,UAACK,GAAD;AAAA,aAASA,GAAG,CAACH,EAAb;AAAA,KAAb,CAAd;AAAA,GAAf,CAAtB,CAhBqB,CAiBrB;AAEA;;AACA,MAAMI,KAAK,GAAGd,UAAU,CAACQ,GAAX,CAAe,UAACI,QAAD;AAAA,WAAcA,QAAQ,CAACJ,GAAT,CAAa,UAACK,GAAD;AAAA,aAASA,GAAG,CAACC,KAAb;AAAA,KAAb,CAAd;AAAA,GAAf,CAAd,CApBqB,CAqBrB;;AAGA,WAASC,gBAAT,CAA0BN,GAA1B,EAA+BO,IAA/B,EAAqC;AACjC,QAAIhB,UAAU,GAAG,EAAjB;AACAgB,IAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,IAAD,EAAU;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBX,GAAnB,EAAwB,MAAxB,EAAgCS,IAAhC;;AACA,UAAIA,IAAI,CAACR,EAAL,KAAYD,GAAhB,EAAqB;AACjBT,QAAAA,UAAU,GAAGK,MAAM,CAACC,MAAP,CAAcY,IAAI,CAAClB,UAAnB,CAAb;AACH;AACJ,KALD;AAMAmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,UAAZ;AACA,WAAOA,UAAP;AACH;;AACDe,EAAAA,gBAAgB,CAACR,OAAO,CAAC,CAAD,CAAR,EAAaH,UAAb,CAAhB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA3CQF,Q;UAEQL,W;;;KAFRK,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import { useSelector } from \"react-redux\"\n\nconst selectDays = state => state.categories.days\n\nfunction ChartAll(props) {\n    \n    const days = useSelector(selectDays)\n\n    // Array of all days [{},{},{}]\n    const daysValues = Object.values(days)\n\n    // Array of all ids [\"\", \"\", \"\"]\n    const daysIds = daysValues.map((day) => day.id)\n    //console.log(daysIds)\n\n    // Array of arrays of objects - categories [[{}, {}], [{}, {}]]\n    const categories = daysValues.map((day) => Object.values(day.categories))\n    //console.log(categories)\n\n    // Array of arrays of ids [[\"\", \"\", \"\"], [\"\", \"\", \"\"]]\n    const categoriesIds = categories.map((category) => category.map((cat) => cat.id))\n    //console.log(categoriesIds)\n\n    // Array of arrays of arrays of cells [[[\"\",\"\"],[\"\",\"\"]],[[\"\",\"\"],[\"\",\"\"]]]\n    const cells = categories.map((category) => category.map((cat) => cat.cells))\n    //console.log(cells)\n\n\n    function getCategoryofDay(day, data) {\n        let categories = []\n        data.forEach((item) => {\n            console.log(\"day\", day, \"item\", item)\n            if (item.id === day) {\n                categories = Object.values(item.categories)\n            }\n        })\n        console.log(categories)\n        return categories\n    }\n    getCategoryofDay(daysIds[1], daysValues)\n\n    return (\n        <div>\n            Chart\n        </div>\n    )\n\n}\n\nexport default ChartAll"]},"metadata":{},"sourceType":"module"}