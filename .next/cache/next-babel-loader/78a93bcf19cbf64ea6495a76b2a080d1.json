{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/Category.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport { connect } from \"react-redux\";\nimport { getCells } from \"../redux/selectors\";\nimport { addCategory } from \"../redux/actions\";\nimport { addDay } from \"../redux/actions\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nvar selectCategories = function selectCategories(state) {\n  return state.categories;\n};\n\nfunction Category(props) {\n  _s();\n\n  var _this = this;\n\n  var Categories = useSelector(selectCategories);\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      SetIsOpen = _useState[1];\n\n  var dispatch = useDispatch();\n\n  function HandleClick() {\n    SetIsOpen(!isOpen);\n    dispatch({\n      type: \"ADD_CATEGORY\",\n      payload: props.name\n    }); // dispatch(addCategory(props.name))\n  }\n\n  function CellSelected(cellName) {\n    dispatch({\n      type: \"ADD_CELL\",\n      payload: {\n        cell_name: cellName,\n        cat_name: props.name\n      }\n    });\n  }\n\n  function CellUnselected(cellName) {\n    dispatch({\n      type: \"REMOVE_CELL\",\n      payload: {\n        cell_name: cellName,\n        cat_name: props.name\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative inline-block text-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: HandleClick,\n        className: \"inline-flex justify-center w-full rounded-lg border border-gray-300 shadow-sm px-4 py-2 bg-\".concat(props.bg, \"-300 text-lg font-medium text-gray-700\\n                 hover:bg-\").concat(props.bg, \"-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-300\"),\n        id: props.id,\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"true\",\n        children: [\" \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"origin-top-right absolute right-0 mt-2 w-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-1\",\n        role: \"menu\",\n        \"aria-orientation\": \"vertical\",\n        \"aria-labelledby\": \"options-menu\",\n        children: props.cells.map(function (cell) {\n          return /*#__PURE__*/_jsxDEV(Cell, {\n            id: props.id,\n            name: cell.name,\n            bg: props.bg,\n            selected: CellSelected,\n            unselected: CellUnselected\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 46\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n} // const mapStateToProps = state => {\n//     const {cell, cells} = state.cellsList || {}\n//     const cellsList = cells ? cells.map(name => (cell ? {...cell[name], name} : null)) : null\n//     return {cellsList}\n// }\n// const mapStateToProps = state => {\n//     const {category, categories} = state.days || {}\n//     const categoryList = categories ? categories.map(name => (category ? {...category[name], name} : null)) : null\n//     return {categoryList}\n// }\n\n\n_s(Category, \"EfsiKGKAbHreqn4XKWX7sFNeRvY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category; //export default connect(state => ({cells: getCells(state)}))(Category)\n//export default Category\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/Category.js"],"names":["useState","Cell","connect","getCells","addCategory","addDay","useSelector","useDispatch","selectCategories","state","categories","Category","props","Categories","isOpen","SetIsOpen","dispatch","HandleClick","type","payload","name","CellSelected","cellName","cell_name","cat_name","CellUnselected","bg","id","cells","map","cell"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport Cell from \"./Cell\"\nimport { connect } from \"react-redux\"\nimport { getCells } from \"../redux/selectors\"\nimport { addCategory } from \"../redux/actions\"\nimport { addDay } from \"../redux/actions\"\nimport { useSelector } from \"react-redux\"\nimport { useDispatch } from \"react-redux\"\n\nconst selectCategories = state => state.categories\n\nfunction Category(props) {\n\n    const Categories = useSelector(selectCategories)\n    const [isOpen, SetIsOpen] = useState(false)\n    const dispatch = useDispatch()\n\n    function HandleClick() {\n        SetIsOpen(!isOpen)\n        dispatch({type: \"ADD_CATEGORY\", payload: props.name}) // dispatch(addCategory(props.name))\n    }\n    \n    function CellSelected(cellName) {\n        dispatch({type:\"ADD_CELL\", payload:{cell_name: cellName, cat_name: props.name}})\n    }\n\n    function CellUnselected(cellName) {\n        dispatch({type:\"REMOVE_CELL\", payload:{cell_name: cellName, cat_name: props.name}})\n    }\n\n\n    return (\n        <div className=\"relative inline-block text-left\">\n            <div>\n                <button type=\"button\" onClick={HandleClick} className={`inline-flex justify-center w-full rounded-lg border border-gray-300 shadow-sm px-4 py-2 bg-${props.bg}-300 text-lg font-medium text-gray-700\n                 hover:bg-${props.bg}-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-300`}\n                 id={props.id} aria-haspopup=\"true\" aria-expanded=\"true\"> {props.name}\n                </button>\n            </div>\n\n    {/* Dropdown panel, show/hide based on dropdown state.\n\n    Entering: \"transition ease-out duration-100\"\n      From: \"transform opacity-0 scale-95\"\n      To: \"transform opacity-100 scale-100\"\n    Leaving: \"transition ease-in duration-75\"\n      From: \"transform opacity-100 scale-100\"\n      To: \"transform opacity-0 scale-95\" */}\n            {isOpen && <div className=\"origin-top-right absolute right-0 mt-2 w-auto\">\n                <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n                    {props.cells.map(cell => <Cell key={cell.id} id={props.id} name={cell.name} bg={props.bg} selected={CellSelected} unselected={CellUnselected}/>)}\n                </div>\n            </div>}\n        </div>\n    )\n}\n\n// const mapStateToProps = state => {\n//     const {cell, cells} = state.cellsList || {}\n//     const cellsList = cells ? cells.map(name => (cell ? {...cell[name], name} : null)) : null\n//     return {cellsList}\n// }\n\n// const mapStateToProps = state => {\n//     const {category, categories} = state.days || {}\n//     const categoryList = categories ? categories.map(name => (category ? {...category[name], name} : null)) : null\n//     return {categoryList}\n// }\n\nexport default Category\n//export default connect(state => ({cells: getCells(state)}))(Category)\n\n//export default Category"]},"metadata":{},"sourceType":"module"}