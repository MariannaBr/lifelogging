{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\";\nimport { today } from \"../../components/Today\";\nvar dayId = today;\nvar initialState = {\n  day: {\n    id: \"\",\n    categories: [{\n      name: \"\",\n      cells: []\n    }]\n  }\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CATEGORY:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state.day), {}, {\n            categories: [].concat(_toConsumableArray(state.days.categories), [action.payload])\n          })\n        });\n      }\n\n    case ADD_CELL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          day: _objectSpread(_objectSpread({}, state.day), {}, {\n            categories: [].concat(_toConsumableArray(state.day.categories), [{\n              cells: [].concat(_toConsumableArray(cells), [action.payload])\n            }])\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","today","dayId","initialState","day","id","categories","name","cells","state","action","type","days","payload"],"mappings":";;;;;;;AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,QAAgD,gBAAhD;AACA,SAAQC,KAAR,QAAoB,wBAApB;AAEA,IAAIC,KAAK,GAAGD,KAAZ;AAEA,IAAME,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE;AACDC,IAAAA,EAAE,EAAE,EADH;AAEDC,IAAAA,UAAU,EAAE,CACR;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADQ;AAFX;AADY,CAArB;AAYA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,YAAL;AAAmB;AACf,+CACOU,KADP;AAEIG,UAAAA,IAAI,kCACGH,KAAK,CAACL,GADT;AAEAE,YAAAA,UAAU,+BACHG,KAAK,CAACG,IAAN,CAAWN,UADR,IAENI,MAAM,CAACG,OAFD;AAFV;AAFR;AAWH;;AACD,SAAKb,QAAL;AAAe;AACX,+CACOS,KADP;AAEIL,UAAAA,GAAG,kCACIK,KAAK,CAACL,GADV;AAECE,YAAAA,UAAU,+BACHG,KAAK,CAACL,GAAN,CAAUE,UADP,IAEN;AACIE,cAAAA,KAAK,+BACEA,KADF,IAEDE,MAAM,CAACG,OAFN;AADT,aAFM;AAFX;AAFP;AAeH;;AACD;AACI,aAAOJ,KAAP;AAhCR;AAmCH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\"\nimport {today} from \"../../components/Today\"\n\nlet dayId = today\n\nconst initialState = {\n    day: {\n        id: \"\",\n        categories: [\n            {\n                name: \"\",\n                cells: []\n            }\n        ]\n    }\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CATEGORY: {\n            return {\n                ...state,\n                days: {\n                    ...state.day,\n                    categories: [\n                        ...state.days.categories,\n                        action.payload\n                    ]\n                }\n            }\n            \n        }\n        case ADD_CELL: {\n            return {\n                ...state,\n                day: {\n                    ...state.day,\n                    categories: [\n                        ...state.day.categories,\n                        {\n                            cells: [\n                                ...cells,\n                                action.payload\n                            ]\n                        }\n                    ]\n                }\n            }\n        }\n        default:\n            return state\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}