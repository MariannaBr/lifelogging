{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/CategoryChart.js\";\nimport dynamic from \"next/dynamic\";\nimport chartOptions from \"../helpers/chartOptions\";\nconst Chart = dynamic(() => import(\"react-apexcharts\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-apexcharts\")],\n    modules: [\"react-apexcharts\"]\n  }\n});\n\nfunction CategoryChart(props) {\n  // default chart series, generated for every cell\n  // const defaultSeries = props.defaultCells.map((cell) => {\n  //     return {\n  //         name: cell.name,\n  //         data: props.defaultDatas\n  //     }\n  // })\n  let data = {};\n\n  for (var i = 0; i < props.chartDays.length; i++) {\n    //console.log(\"day\", props.chartDays[i])\n    data[props.chartDays[i]] = {}; //console.log(\"data[day]\",data[props.chartDays[i]])\n\n    for (var j = 0; j < props.defaultCells.length; j++) {\n      data[props.chartDays[i]][props.defaultCells[j]] = 0; //console.log(\"data[day][cell]\", data[props.chartDays[i]][props.defaultCells[j]])\n    }\n  } //console.log(data)\n\n\n  for (var i = 0; i < props.storeDaysValues.length; i++) {\n    data[props.storeDaysValues[i].id] = {};\n\n    for (j = 0; j < props.storeDaysValues[i].cells.length; j++) {\n      data[props.storeDaysValues[i].id][props.storeDaysValues[i].cells[j]] = 1;\n    }\n  }\n\n  console.log(data);\n  const chartWidth = (props.chartDays.length * 15).toString();\n  const chartHeight = (props.defaultCells.length * 50).toString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-lg w-1/5 font-semibold text-${props.color}-400`,\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\nexport default CategoryChart; // const series = props.defaultCells.map((cell) => {\n//     return {\n//       name: cell.name,\n//       data: chartDays.map((day) => {\n//           return {\n//               x: simplifyDate(day),\n//               y: cellHappenedToday(cell.name, day)\n//           }\n//       })\n//     }\n//   })\n// function cellHappenedToday(cell, chartDay) {\n//     return storeDaysValues.reduce((total, day) => {\n//         if (day.id === chartDay) {\n//             const storeCellsIds = Object.values(day.cells)\n//             if (storeCellsIds.includes(cell)) {\n//                 return total + 1\n//             }\n//         }               \n//         return total \n//     }, 0)\n// }","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/CategoryChart.js"],"names":["dynamic","chartOptions","Chart","ssr","CategoryChart","props","data","i","chartDays","length","j","defaultCells","storeDaysValues","id","cells","console","log","chartWidth","toString","chartHeight","color"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,MAAMC,KAAK,GAAGF,OAAO,CAAC,MAAM,OAAQ,kBAAR,CAAP,EAAoC;AAACG,EAAAA,GAAG,EAAE,KAAN;AAAA;AAAA,wCAArB,kBAAqB;AAAA,cAArB,kBAAqB;AAAA;AAAA,CAApC,CAArB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,KAAK,CAACG,SAAN,CAAgBC,MAAhC,EAAuCF,CAAC,EAAxC,EAA4C;AACxC;AACAD,IAAAA,IAAI,CAACD,KAAK,CAACG,SAAN,CAAgBD,CAAhB,CAAD,CAAJ,GAA2B,EAA3B,CAFwC,CAGxC;;AACA,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACL,KAAK,CAACM,YAAN,CAAmBF,MAAnC,EAA2CC,CAAC,EAA5C,EAAgD;AAC5CJ,MAAAA,IAAI,CAACD,KAAK,CAACG,SAAN,CAAgBD,CAAhB,CAAD,CAAJ,CAAyBF,KAAK,CAACM,YAAN,CAAmBD,CAAnB,CAAzB,IAAkD,CAAlD,CAD4C,CAE5C;AACH;AACJ,GAnByB,CAqB1B;;;AAEA,OAAK,IAAIH,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,KAAK,CAACO,eAAN,CAAsBH,MAAtC,EAA8CF,CAAC,EAA/C,EAAmD;AAC/CD,IAAAA,IAAI,CAACD,KAAK,CAACO,eAAN,CAAsBL,CAAtB,EAAyBM,EAA1B,CAAJ,GAAoC,EAApC;;AACA,SAAKH,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACL,KAAK,CAACO,eAAN,CAAsBL,CAAtB,EAAyBO,KAAzB,CAA+BL,MAA3C,EAAmDC,CAAC,EAApD,EAAwD;AACpDJ,MAAAA,IAAI,CAACD,KAAK,CAACO,eAAN,CAAsBL,CAAtB,EAAyBM,EAA1B,CAAJ,CAAkCR,KAAK,CAACO,eAAN,CAAsBL,CAAtB,EAAyBO,KAAzB,CAA+BJ,CAA/B,CAAlC,IAAuE,CAAvE;AACH;AACJ;;AAEDK,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,QAAMW,UAAU,GAAG,CAACZ,KAAK,CAACG,SAAN,CAAgBC,MAAhB,GAAuB,EAAxB,EAA4BS,QAA5B,EAAnB;AACA,QAAMC,WAAW,GAAG,CAACd,KAAK,CAACM,YAAN,CAAmBF,MAAnB,GAA0B,EAA3B,EAA+BS,QAA/B,EAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,oCAAmCb,KAAK,CAACe,KAAM,MAAhE;AAAA,gBACKf,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;AAED,eAAeT,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import dynamic from \"next/dynamic\"\nimport chartOptions from \"../helpers/chartOptions\"\n\nconst Chart = dynamic(() => import (\"react-apexcharts\"), {ssr: false})\n\nfunction CategoryChart(props) {\n\n    // default chart series, generated for every cell\n    // const defaultSeries = props.defaultCells.map((cell) => {\n    //     return {\n    //         name: cell.name,\n    //         data: props.defaultDatas\n    //     }\n    // })\n\n    let data = {}\n    for (var i=0; i<props.chartDays.length;i++) {\n        //console.log(\"day\", props.chartDays[i])\n        data[props.chartDays[i]] = {}\n        //console.log(\"data[day]\",data[props.chartDays[i]])\n        for (var j=0; j<props.defaultCells.length; j++) {\n            data[props.chartDays[i]][props.defaultCells[j]] = 0\n            //console.log(\"data[day][cell]\", data[props.chartDays[i]][props.defaultCells[j]])\n        }\n    }\n\n    //console.log(data)\n\n    for (var i=0; i<props.storeDaysValues.length; i++) {\n        data[props.storeDaysValues[i].id] = {}\n        for (j=0; j<props.storeDaysValues[i].cells.length; j++) {\n            data[props.storeDaysValues[i].id][props.storeDaysValues[i].cells[j]] = 1\n        }\n    }\n\n    console.log(data)\n    const chartWidth = (props.chartDays.length*15).toString()\n    const chartHeight = (props.defaultCells.length*50).toString()\n\n    return (\n        <div className=\"flex flex-row\">\n            <div className={`text-lg w-1/5 font-semibold text-${props.color}-400`}>\n                {props.id}\n            </div>\n            {/* <div>\n                <Chart options={chartOptions(props.color)} series={defaultSeries} type=\"heatmap\" width={chartWidth} height={chartHeight}/>\n            </div> */}\n            \n        </div>\n    )\n}\n\nexport default CategoryChart\n\n// const series = props.defaultCells.map((cell) => {\n//     return {\n//       name: cell.name,\n//       data: chartDays.map((day) => {\n//           return {\n//               x: simplifyDate(day),\n//               y: cellHappenedToday(cell.name, day)\n//           }\n//       })\n//     }\n//   })\n\n// function cellHappenedToday(cell, chartDay) {\n//     return storeDaysValues.reduce((total, day) => {\n//         if (day.id === chartDay) {\n//             const storeCellsIds = Object.values(day.cells)\n//             if (storeCellsIds.includes(cell)) {\n//                 return total + 1\n//             }\n//         }               \n//         return total \n//     }, 0)\n// }\n\n"]},"metadata":{},"sourceType":"module"}