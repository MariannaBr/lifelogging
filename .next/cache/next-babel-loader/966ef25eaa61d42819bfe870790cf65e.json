{"ast":null,"code":"import { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\";\nimport { today } from \"../../components/Today\";\nvar dayId = today;\nvar initialState = [{\n  category: \"\",\n  cells: []\n}];\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // case ADD_CATEGORY:\n    //     return {\n    //         ...state,\n    //         cats: [...state.categories,\n    //         {\n    //             category: action.payload\n    //         }]\n    //     }\n    // case ADD_CELL:\n    //     return {\n    //         ...state,\n    //         categories: {\n    //             ...state.categories,\n    //             category: {\n    //                 ...state.categories.category,\n    //                 cells: [\n    //                     {\n    //                     cell: action.payload\n    //                     }\n    //                 ]\n    //             }\n    //         }\n    //     }\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","today","dayId","initialState","category","cells","state","action","type"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,QAAgD,gBAAhD;AACA,SAAQC,KAAR,QAAoB,wBAApB;AAEA,IAAIC,KAAK,GAAGD,KAAZ;AAEA,IAAME,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAQ,EAAC,EAAV;AAAcC,EAAAA,KAAK,EAAC;AAApB,CAAD,CAArB;AAGA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACI,aAAOF,KAAP;AA3BR;AA6BH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\"\nimport {today} from \"../../components/Today\"\n\nlet dayId = today\n\nconst initialState = [{category:\"\", cells:[]}]\n\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        // case ADD_CATEGORY:\n        //     return {\n        //         ...state,\n        //         cats: [...state.categories,\n        //         {\n        //             category: action.payload\n        //         }]\n        //     }\n        // case ADD_CELL:\n        //     return {\n        //         ...state,\n        //         categories: {\n        //             ...state.categories,\n        //             category: {\n        //                 ...state.categories.category,\n        //                 cells: [\n        //                     {\n        //                     cell: action.payload\n        //                     }\n                            \n        //                 ]\n        //             }\n        //         }\n        //     }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}