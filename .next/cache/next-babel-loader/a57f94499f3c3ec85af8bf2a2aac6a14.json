{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_CELL, REMOVE_CELL } from \"../actionTypes\";\nimport deleteItem from \"../../helpers/deleteItem\";\nconst initialState = {\n  days: {\n    \"0\": {\n      id: \"0\",\n      categories: {\n        \"test\": {\n          id: \"mood\",\n          cells: [\"test\"]\n        }\n      }\n    }\n  }\n};\nexport default function cellReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_CELL:\n      {\n        var _state$days$dayId, _state$days$dayId2, _state$days$dayId3, _state$days$dayId3$ca;\n\n        const {\n          payload\n        } = action;\n        const {\n          dayId,\n          categoryName,\n          cellName\n        } = payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days), {}, {\n            [dayId]: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days[dayId]), {}, {\n              id: dayId,\n              categories: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$dayId = state.days[dayId]) === null || _state$days$dayId === void 0 ? void 0 : _state$days$dayId.categories), {}, {\n                [categoryName]: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$dayId2 = state.days[dayId]) === null || _state$days$dayId2 === void 0 ? void 0 : _state$days$dayId2.categories[categoryName]), {}, {\n                  id: categoryName,\n                  cells: [...((state === null || state === void 0 ? void 0 : (_state$days$dayId3 = state.days[dayId]) === null || _state$days$dayId3 === void 0 ? void 0 : (_state$days$dayId3$ca = _state$days$dayId3.categories[categoryName]) === null || _state$days$dayId3$ca === void 0 ? void 0 : _state$days$dayId3$ca.cells) || []), cellName]\n                })\n              })\n            })\n          })\n        });\n      }\n\n    case REMOVE_CELL:\n      {\n        var _state$days$dayId4, _state$days$dayId5, _state$days$dayId6, _state$days$dayId6$ca;\n\n        const {\n          payload\n        } = action;\n        const {\n          dayId,\n          categoryName,\n          cellName\n        } = payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days), {}, {\n            [dayId]: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days[dayId]), {}, {\n              categories: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$dayId4 = state.days[dayId]) === null || _state$days$dayId4 === void 0 ? void 0 : _state$days$dayId4.categories), {}, {\n                [categoryName]: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : (_state$days$dayId5 = state.days[dayId]) === null || _state$days$dayId5 === void 0 ? void 0 : _state$days$dayId5.categories[categoryName]), {}, {\n                  cells: deleteItem(state === null || state === void 0 ? void 0 : (_state$days$dayId6 = state.days[dayId]) === null || _state$days$dayId6 === void 0 ? void 0 : (_state$days$dayId6$ca = _state$days$dayId6.categories[categoryName]) === null || _state$days$dayId6$ca === void 0 ? void 0 : _state$days$dayId6$ca.cells, cellName)\n                })\n              })\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_CELL","REMOVE_CELL","deleteItem","initialState","days","id","categories","cells","cellReducer","state","action","type","payload","dayId","categoryName","cellName"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACF,SAAK;AACDC,MAAAA,EAAE,EAAE,GADH;AAEDC,MAAAA,UAAU,EAAE;AACR,gBAAQ;AACJD,UAAAA,EAAE,EAAE,MADA;AAEJE,UAAAA,KAAK,EAAE,CAAC,MAAD;AAFH;AADA;AAFX;AADH;AADW,CAArB;AAcA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGN,YAA7B,EAA2CO,MAA3C,EAAmD;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,QAAL;AAAe;AAAA;;AACX,cAAM;AAAEY,UAAAA;AAAF,YAAcF,MAApB;AACA,cAAM;AAAEG,UAAAA,KAAF;AAASC,UAAAA,YAAT;AAAuBC,UAAAA;AAAvB,YAAoCH,OAA1C;AACA,+CACOH,KADP;AAEIL,UAAAA,IAAI,kCACGK,KADH,aACGA,KADH,uBACGA,KAAK,CAAEL,IADV;AAEA,aAACS,KAAD,mCACOJ,KADP,aACOA,KADP,uBACOA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CADP;AAEIR,cAAAA,EAAE,EAAEQ,KAFR;AAGIP,cAAAA,UAAU,kCACHG,KADG,aACHA,KADG,4CACHA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CADG,sDACH,kBAAoBP,UADjB;AAEN,iBAACQ,YAAD,mCACOL,KADP,aACOA,KADP,6CACOA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CADP,uDACO,mBAAoBP,UAApB,CAA+BQ,YAA/B,CADP;AAEIT,kBAAAA,EAAE,EAAES,YAFR;AAGIP,kBAAAA,KAAK,EAAE,CACH,IAAG,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,kCAAAA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,oGAAoBP,UAApB,CAA+BQ,YAA/B,iFAA8CP,KAA9C,KAAuD,EAA1D,CADG,EAEHQ,QAFG;AAHX;AAFM;AAHd;AAFA;AAFR;AAqBH;;AACD,SAAKd,WAAL;AAAkB;AAAA;;AACd,cAAM;AAAEW,UAAAA;AAAF,YAAcF,MAApB;AACA,cAAM;AAAEG,UAAAA,KAAF;AAASC,UAAAA,YAAT;AAAuBC,UAAAA;AAAvB,YAAoCH,OAA1C;AACA,+CACOH,KADP;AAEIL,UAAAA,IAAI,kCACGK,KADH,aACGA,KADH,uBACGA,KAAK,CAAEL,IADV;AAEA,aAACS,KAAD,mCACOJ,KADP,aACOA,KADP,uBACOA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CADP;AAEIP,cAAAA,UAAU,kCACHG,KADG,aACHA,KADG,6CACHA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CADG,uDACH,mBAAoBP,UADjB;AAEN,iBAACQ,YAAD,mCACOL,KADP,aACOA,KADP,6CACOA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CADP,uDACO,mBAAoBP,UAApB,CAA+BQ,YAA/B,CADP;AAEIP,kBAAAA,KAAK,EAAEL,UAAU,CAACO,KAAD,aAACA,KAAD,6CAACA,KAAK,CAAEL,IAAP,CAAYS,KAAZ,CAAD,gFAAC,mBAAoBP,UAApB,CAA+BQ,YAA/B,CAAD,0DAAC,sBAA8CP,KAA/C,EAAsDQ,QAAtD;AAFrB;AAFM;AAFd;AAFA;AAFR;AAgBH;;AAED;AACI,aAAON,KAAP;AAhDR;AAkDH","sourcesContent":["import { ADD_CELL, REMOVE_CELL } from \"../actionTypes\"\nimport deleteItem from \"../../helpers/deleteItem\"\n\nconst initialState = {\n    days: {\n        \"0\": {\n            id: \"0\",\n            categories: {\n                \"test\": {\n                    id: \"mood\",\n                    cells: [\"test\"]\n                }\n            }\n        }\n    },\n}\n\nexport default function cellReducer(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CELL: {\n            const { payload } = action\n            const { dayId, categoryName, cellName } = payload\n            return {\n                ...state,\n                days: {\n                    ...state?.days,\n                    [dayId]: {\n                        ...state?.days[dayId],\n                        id: dayId,\n                        categories: {\n                            ...state?.days[dayId]?.categories,\n                            [categoryName]: {\n                                ...state?.days[dayId]?.categories[categoryName],\n                                id: categoryName,\n                                cells: [\n                                    ...state?.days[dayId]?.categories[categoryName]?.cells || [],\n                                    cellName\n                                ]\n                            }\n                        }\n                    }\n                },\n            }\n        }\n        case REMOVE_CELL: {\n            const { payload } = action\n            const { dayId, categoryName, cellName } = payload\n            return {\n                ...state,\n                days: {\n                    ...state?.days,\n                    [dayId]: {\n                        ...state?.days[dayId],\n                        categories: {\n                            ...state?.days[dayId]?.categories,\n                            [categoryName]: {\n                                ...state?.days[dayId]?.categories[categoryName],\n                                cells: deleteItem(state?.days[dayId]?.categories[categoryName]?.cells, cellName)\n                            }\n                        }\n                    }\n                },\n            }\n        }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}