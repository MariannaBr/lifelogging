{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_CELL, REMOVE_CELL } from \"../actionTypes\";\nimport deleteItem from \"../../helpers/deleteItem\";\nconst initialState = {\n  days: {\n    \"2020-12-01\": {\n      id: \"2020-12-01\",\n      cells: [\"happy\", \"fine\", \"potatoes\", \"bread\"]\n    },\n    \"2021-01-21\": {\n      id: \"2021-1-21\",\n      cells: [\"happy\", \"rice\", \"bread\"]\n    }\n  }\n};\nexport default function cellReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_CELL:\n      {\n        var _state$days$dayId;\n\n        const {\n          payload\n        } = action;\n        const {\n          dayId,\n          cellName\n        } = payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days), {}, {\n            [dayId]: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days[dayId]), {}, {\n              id: dayId,\n              cells: [...((state === null || state === void 0 ? void 0 : (_state$days$dayId = state.days[dayId]) === null || _state$days$dayId === void 0 ? void 0 : _state$days$dayId.cells) || []), cellName]\n            })\n          })\n        });\n      }\n\n    case REMOVE_CELL:\n      {\n        var _state$days$dayId2;\n\n        const {\n          payload\n        } = action;\n        const {\n          dayId,\n          cellName\n        } = payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days), {}, {\n            [dayId]: _objectSpread(_objectSpread({}, state === null || state === void 0 ? void 0 : state.days[dayId]), {}, {\n              cells: deleteItem(state === null || state === void 0 ? void 0 : (_state$days$dayId2 = state.days[dayId]) === null || _state$days$dayId2 === void 0 ? void 0 : _state$days$dayId2.cells, cellName)\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_CELL","REMOVE_CELL","deleteItem","initialState","days","id","cells","cellReducer","state","action","type","payload","dayId","cellName"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACF,kBAAc;AACVC,MAAAA,EAAE,EAAE,YADM;AAEVC,MAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,UAAlB,EAA8B,OAA9B;AAFG,KADZ;AAKF,kBAAc;AACVD,MAAAA,EAAE,EAAE,WADM;AAEVC,MAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB;AAFG;AALZ;AADW,CAArB;AAcA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,QAAL;AAAe;AAAA;;AACX,cAAM;AAAEW,UAAAA;AAAF,YAAcF,MAApB;AACA,cAAM;AAAEG,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAsBF,OAA5B;AACA,+CACOH,KADP;AAEIJ,UAAAA,IAAI,kCACGI,KADH,aACGA,KADH,uBACGA,KAAK,CAAEJ,IADV;AAEA,aAACQ,KAAD,mCACOJ,KADP,aACOA,KADP,uBACOA,KAAK,CAAEJ,IAAP,CAAYQ,KAAZ,CADP;AAEIP,cAAAA,EAAE,EAAEO,KAFR;AAGIN,cAAAA,KAAK,EAAE,CACH,IAAG,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,iCAAAA,KAAK,CAAEJ,IAAP,CAAYQ,KAAZ,yEAAoBN,KAApB,KAA6B,EAAhC,CADG,EAEHO,QAFG;AAHX;AAFA;AAFR;AAcH;;AACD,SAAKZ,WAAL;AAAkB;AAAA;;AACd,cAAM;AAAEU,UAAAA;AAAF,YAAcF,MAApB;AACA,cAAM;AAAEG,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAsBF,OAA5B;AACA,+CACOH,KADP;AAEIJ,UAAAA,IAAI,kCACGI,KADH,aACGA,KADH,uBACGA,KAAK,CAAEJ,IADV;AAEA,aAACQ,KAAD,mCACOJ,KADP,aACOA,KADP,uBACOA,KAAK,CAAEJ,IAAP,CAAYQ,KAAZ,CADP;AAEQN,cAAAA,KAAK,EAAEJ,UAAU,CAACM,KAAD,aAACA,KAAD,6CAACA,KAAK,CAAEJ,IAAP,CAAYQ,KAAZ,CAAD,uDAAC,mBAAoBN,KAArB,EAA4BO,QAA5B;AAFzB;AAFA;AAFR;AAUC;;AAEL;AACI,aAAOL,KAAP;AAnCR;AAqCH","sourcesContent":["import { ADD_CELL, REMOVE_CELL } from \"../actionTypes\"\nimport deleteItem from \"../../helpers/deleteItem\"\n\nconst initialState = {\n    days: {\n        \"2020-12-01\": {\n            id: \"2020-12-01\",\n            cells: [\"happy\", \"fine\", \"potatoes\", \"bread\"]\n        },\n        \"2021-01-21\": {\n            id: \"2021-1-21\",\n            cells: [\"happy\", \"rice\", \"bread\"]\n            \n        }\n    }\n}\n\nexport default function cellReducer(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CELL: {\n            const { payload } = action\n            const { dayId, cellName } = payload\n            return {\n                ...state,\n                days: {\n                    ...state?.days,\n                    [dayId]: {\n                        ...state?.days[dayId],\n                        id: dayId,\n                        cells: [\n                            ...state?.days[dayId]?.cells || [],\n                            cellName\n                        ]\n                    }\n                }\n            }\n        }\n        case REMOVE_CELL: {\n            const { payload } = action\n            const { dayId, cellName } = payload\n            return {\n                ...state,\n                days: {\n                    ...state?.days,\n                    [dayId]: {\n                        ...state?.days[dayId],\n                            cells: deleteItem(state?.days[dayId]?.cells, cellName)\n                        }\n                    }\n                }\n            }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}