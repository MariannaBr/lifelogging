{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/CategoryChart.js\";\nimport dynamic from \"next/dynamic\";\nimport chartOptions from \"../helpers/chartOptions\";\nimport simplifyDate from \"../helpers/simplifyDate\";\nconst Chart = dynamic(() => import(\"react-apexcharts\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-apexcharts\")],\n    modules: [\"react-apexcharts\"]\n  }\n});\n\nfunction CategoryChart(props) {\n  let dataY = {};\n\n  for (var i = 0; i < props.chartDays.length; i++) {\n    //console.log(\"day\", props.chartDays[i])\n    dataY[props.chartDays[i]] = {}; //console.log(\"data[day]\",data[props.chartDays[i]])\n\n    for (var j = 0; j < props.defaultCells.length; j++) {\n      dataY[props.chartDays[i]][props.defaultCells[j]] = 0; //console.log(\"data[day][cell]\", data[props.chartDays[i]][props.defaultCells[j]])\n    }\n  }\n\n  console.log(props.defaultCells);\n\n  for (var i = 0; i < props.storeDaysValues.length; i++) {\n    dataY[props.storeDaysValues[i].id] = {};\n\n    for (j = 0; j < props.storeDaysValues[i].cells.length; j++) {\n      dataY[props.storeDaysValues[i].id][props.storeDaysValues[i].cells[j]] = 1;\n    }\n  }\n\n  console.log(\"dataY\", dataY);\n  const Series = props.defaultCells.map(cell => {\n    return {\n      name: cell.name,\n      data: props.chartDays.map(day => {\n        return {\n          x: simplifyDate(day),\n          y: dataY[day][cell.name]\n        };\n      })\n    };\n  });\n  console.log(\"series\", Series);\n  const chartWidth = (props.chartDays.length * 15).toString();\n  const chartHeight = (props.defaultCells.length * 50).toString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-lg w-1/5 font-semibold text-${props.color}-400`,\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: chartOptions(props.color),\n        series: Series,\n        type: \"heatmap\",\n        width: chartWidth,\n        height: chartHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\nexport default CategoryChart; // const series = props.defaultCells.map((cell) => {\n//     return {\n//       name: cell.name,\n//       data: chartDays.map((day) => {\n//           return {\n//               x: simplifyDate(day),\n//               y: cellHappenedToday(cell.name, day)\n//           }\n//       })\n//     }\n//   })\n// function cellHappenedToday(cell, chartDay) {\n//     return storeDaysValues.reduce((total, day) => {\n//         if (day.id === chartDay) {\n//             const storeCellsIds = Object.values(day.cells)\n//             if (storeCellsIds.includes(cell)) {\n//                 return total + 1\n//             }\n//         }               \n//         return total \n//     }, 0)\n// }","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/CategoryChart.js"],"names":["dynamic","chartOptions","simplifyDate","Chart","ssr","CategoryChart","props","dataY","i","chartDays","length","j","defaultCells","console","log","storeDaysValues","id","cells","Series","map","cell","name","data","day","x","y","chartWidth","toString","chartHeight","color"],"mappings":"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","sourcesContent":["import dynamic from \"next/dynamic\"\nimport chartOptions from \"../helpers/chartOptions\"\nimport simplifyDate from \"../helpers/simplifyDate\"\n\nconst Chart = dynamic(() => import (\"react-apexcharts\"), {ssr: false})\n\nfunction CategoryChart(props) {\n\n    let dataY = {}\n    for (var i=0; i<props.chartDays.length;i++) {\n        //console.log(\"day\", props.chartDays[i])\n        dataY[props.chartDays[i]] = {}\n        //console.log(\"data[day]\",data[props.chartDays[i]])\n        for (var j=0; j<props.defaultCells.length; j++) {\n            dataY[props.chartDays[i]][props.defaultCells[j]] = 0\n            //console.log(\"data[day][cell]\", data[props.chartDays[i]][props.defaultCells[j]])\n        }\n    }\n\n    console.log(props.defaultCells)\n\n    for (var i=0; i<props.storeDaysValues.length; i++) {\n        dataY[props.storeDaysValues[i].id] = {}\n        for (j=0; j<props.storeDaysValues[i].cells.length; j++) {\n            dataY[props.storeDaysValues[i].id][props.storeDaysValues[i].cells[j]] = 1\n        }\n    }\n\n    console.log(\"dataY\", dataY)\n\n    const Series = props.defaultCells.map((cell) => {\n        return {\n            name: cell.name,\n            data: props.chartDays.map((day) => {\n                return {\n                    x: simplifyDate(day),\n                    y: dataY[day][cell.name]\n                }\n            })\n        }\n    })\n\n    console.log(\"series\", Series)\n\n\n    const chartWidth = (props.chartDays.length*15).toString()\n    const chartHeight = (props.defaultCells.length*50).toString()\n\n    return (\n        <div className=\"flex flex-row\">\n            <div className={`text-lg w-1/5 font-semibold text-${props.color}-400`}>\n                {props.id}\n            </div>\n            <div>\n                <Chart options={chartOptions(props.color)} series={Series} type=\"heatmap\" width={chartWidth} height={chartHeight}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default CategoryChart\n\n// const series = props.defaultCells.map((cell) => {\n//     return {\n//       name: cell.name,\n//       data: chartDays.map((day) => {\n//           return {\n//               x: simplifyDate(day),\n//               y: cellHappenedToday(cell.name, day)\n//           }\n//       })\n//     }\n//   })\n\n// function cellHappenedToday(cell, chartDay) {\n//     return storeDaysValues.reduce((total, day) => {\n//         if (day.id === chartDay) {\n//             const storeCellsIds = Object.values(day.cells)\n//             if (storeCellsIds.includes(cell)) {\n//                 return total + 1\n//             }\n//         }               \n//         return total \n//     }, 0)\n// }\n\n"]},"metadata":{},"sourceType":"module"}