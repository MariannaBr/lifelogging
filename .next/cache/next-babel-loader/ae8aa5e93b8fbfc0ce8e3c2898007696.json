{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/Category.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport { connect } from \"react-redux\";\nimport { getCells } from \"../redux/selectors\";\nimport { addCategory } from \"../redux/actions\";\nimport { addDay } from \"../redux/actions\";\n\nfunction Category(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      SetIsOpen = _useState[1];\n\n  isOpen && props.addCategory(props.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative inline-block text-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return SetIsOpen(!isOpen);\n        },\n        className: \"inline-flex justify-center w-full rounded-lg border border-gray-300 shadow-sm px-4 py-2 bg-\".concat(props.bg, \"-300 text-lg font-medium text-gray-700\\n                 hover:bg-\").concat(props.bg, \"-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-300\"),\n        id: \"mood\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"true\",\n        children: [\" \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"origin-top-right absolute right-0 mt-2 w-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-1\",\n        role: \"menu\",\n        \"aria-orientation\": \"vertical\",\n        \"aria-labelledby\": \"options-menu\",\n        children: props.cells.map(function (cell) {\n          return /*#__PURE__*/_jsxDEV(Cell, {\n            name: cell.name,\n            bg: props.bg\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 46\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n} // const mapStateToProps = state => {\n//     const {cell, cells} = state.cellsList || {}\n//     const cellsList = cells ? cells.map(name => (cell ? {...cell[name], name} : null)) : null\n//     return {cellsList}\n// }\n\n\n_s(Category, \"SAjffNT0RooRBW+54jbLAXFyYSI=\");\n\n_c = Category;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _ref = state.categoryList || {},\n      category = _ref.category,\n      categories = _ref.categories;\n\n  var categoryList = categories ? categories.map(function (name) {\n    return category ? _objectSpread(_objectSpread({}, category[name]), {}, {\n      name: name\n    }) : null;\n  }) : null;\n  return {\n    categoryList: categoryList\n  };\n};\n\nexport default connect(null, mapStateToProps)(Category); //export default connect(state => ({cells: getCells(state)}))(Category)\n//export default Category\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/Category.js"],"names":["useState","Cell","connect","getCells","addCategory","addDay","Category","props","isOpen","SetIsOpen","name","bg","cells","map","cell","id","mapStateToProps","state","categoryList","category","categories"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA;;AAAA,kBAEOP,QAAQ,CAAC,KAAD,CAFf;AAAA,MAEdQ,MAFc;AAAA,MAENC,SAFM;;AAIrBD,EAAAA,MAAM,IAAID,KAAK,CAACH,WAAN,CAAkBG,KAAK,CAACG,IAAxB,CAAV;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,4BACI;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAKD,SAAS,CAAC,CAACD,MAAF,CAAd;AAAA,SAA/B;AAAwD,QAAA,SAAS,uGAAgGD,KAAK,CAACI,EAAtG,+EACrDJ,KAAK,CAACI,EAD+C,4GAAjE;AAEC,QAAA,EAAE,EAAC,MAFJ;AAEW,yBAAc,MAFzB;AAEgC,yBAAc,MAF9C;AAAA,wBAEuDJ,KAAK,CAACG,IAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAgBKF,MAAM,iBAAI;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA,6BACP;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,4BAAiB,UAAnD;AAA8D,2BAAgB,cAA9E;AAAA,kBACKD,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,8BAAI,QAAC,IAAD;AAAoB,YAAA,IAAI,EAAEA,IAAI,CAACJ,IAA/B;AAAqC,YAAA,EAAE,EAAEH,KAAK,CAACI;AAA/C,aAAWG,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,mBAAJ;AAAA,SAApB;AADL;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAhBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,C,CAED;AACA;AACA;AACA;AACA;;;GApCST,Q;;KAAAA,Q;;AAsCT,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,aACEA,KAAK,CAACC,YAAN,IAAsB,EADxB;AAAA,MACtBC,QADsB,QACtBA,QADsB;AAAA,MACZC,UADY,QACZA,UADY;;AAE7B,MAAMF,YAAY,GAAGE,UAAU,GAAGA,UAAU,CAACP,GAAX,CAAe,UAAAH,IAAI;AAAA,WAAKS,QAAQ,mCAAOA,QAAQ,CAACT,IAAD,CAAf;AAAuBA,MAAAA,IAAI,EAAJA;AAAvB,SAA+B,IAA5C;AAAA,GAAnB,CAAH,GAA2E,IAA1G;AACA,SAAO;AAACQ,IAAAA,YAAY,EAAZA;AAAD,GAAP;AACH,CAJD;;AAMA,eAAehB,OAAO,CAAC,IAAD,EAAOc,eAAP,CAAP,CAA+BV,QAA/B,CAAf,C,CACA;AAEA","sourcesContent":["import { useState } from \"react\"\nimport Cell from \"./Cell\"\nimport { connect } from \"react-redux\"\nimport { getCells } from \"../redux/selectors\"\nimport { addCategory } from \"../redux/actions\"\nimport { addDay } from \"../redux/actions\"\n\nfunction Category(props) {\n\n    const [isOpen, SetIsOpen] = useState(false)\n\n    isOpen && props.addCategory(props.name)\n\n    return (\n        <div className=\"relative inline-block text-left\">\n            <div>\n                <button type=\"button\" onClick={()=> SetIsOpen(!isOpen)} className={`inline-flex justify-center w-full rounded-lg border border-gray-300 shadow-sm px-4 py-2 bg-${props.bg}-300 text-lg font-medium text-gray-700\n                 hover:bg-${props.bg}-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-300`}\n                 id=\"mood\" aria-haspopup=\"true\" aria-expanded=\"true\"> {props.name}\n                </button>\n            </div>\n\n    {/* Dropdown panel, show/hide based on dropdown state.\n\n    Entering: \"transition ease-out duration-100\"\n      From: \"transform opacity-0 scale-95\"\n      To: \"transform opacity-100 scale-100\"\n    Leaving: \"transition ease-in duration-75\"\n      From: \"transform opacity-100 scale-100\"\n      To: \"transform opacity-0 scale-95\" */}\n            {isOpen && <div className=\"origin-top-right absolute right-0 mt-2 w-auto\">\n                <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n                    {props.cells.map(cell => <Cell key={cell.id} name={cell.name} bg={props.bg}/>)}\n                </div>\n            </div>}\n        </div>\n    )\n}\n\n// const mapStateToProps = state => {\n//     const {cell, cells} = state.cellsList || {}\n//     const cellsList = cells ? cells.map(name => (cell ? {...cell[name], name} : null)) : null\n//     return {cellsList}\n// }\n\nconst mapStateToProps = state => {\n    const {category, categories} = state.categoryList || {}\n    const categoryList = categories ? categories.map(name => (category ? {...category[name], name} : null)) : null\n    return {categoryList}\n}\n\nexport default connect(null, mapStateToProps)(Category)\n//export default connect(state => ({cells: getCells(state)}))(Category)\n\n//export default Category"]},"metadata":{},"sourceType":"module"}