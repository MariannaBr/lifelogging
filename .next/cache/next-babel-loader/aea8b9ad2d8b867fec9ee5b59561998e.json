{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_DAY, ADD_CATEGORY, ADD_CELL, REMOVE_CELL } from \"../actionTypes\";\n/* STRUCTURE OF THE STATE\n\nstate = {\n    days: {\n        [day_id]: {\n            categories: {\n                [category_name]: {\n                    cells: []\n                }\n            }\n        }\n    }\n} \nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CELL: {\n            return {\n                ...state,\n                days: {\n                    ...state.days,\n                    [action.payload.day_id]: {\n                        ...state.days[action.payload.day_id],\n                        categories: {\n                            ...state.days[action.payload.day_id].categories,\n                            [action.payload.category_name]: {\n                                ...state.days[action.payload.day_id].categories[action.payload.category_name],\n                                cells: [\n                                    ...state.days[action.payload.day_id].categories[action.payload.category_name].cells,\n                                    action.payload.cell_name\n                                ]\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        default:\n            return state\n    }\n}*/\n\n/* STRUCTURE OF THE STATE - 2\n\nstate = {\n    days: {\n        byId: {\n            \"1.Jan.2021\": {\n                id: \"1.Jan.2021\",\n                categories: [],\n                cells: []\n            }\n        },\n        allIds: {\n            [\"1.Jan.2021\", 2.Jan.2021]\n        }\n    },\n    categories: {\n        byId: {\n            \"food\": {\n                id: \"food\",\n                cells: []\n            },\n            \"mood\": {\n                id: \"mood\",\n                cells: []\n            }\n        },\n        allIds: {\n            [\"food\", \"mood\"]\n        }\n    },\n    cells: {\n        byId: {\n            \"bread\": {\n                id: \"bread\",\n                category: \"food\"\n            },\n            \"happy\": {\n                id: \"happy\",\n                category: \"mood\"\n            }\n        },\n        allIds: {\n            [\"bread\", \"happy\"]\n        }\n    }\n} */\n\n/* STRUCTURE OF THE STATE - 3\nstate = {\n    days: {\n        [day_id]: {\n            categories: {\n                [category_name]: {\n                    cells: []\n                }\n            }\n        }\n    },\n    cells: {\n        [cell_name]: {\n            category: \"\",\n            days: []\n        }\n    }\n} */\n\nexport default function (state = {}, action) {\n  const dayId = action.payload.day_id;\n  const categoryName = action.payload.category_name;\n  const cellName = action.payload.cell_name;\n\n  switch (action.type) {\n    case ADD_CELL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          days: _objectSpread(_objectSpread({}, state.days), {}, {\n            [dayId]: _objectSpread(_objectSpread({}, state.days[dayId]), {}, {\n              categories: _objectSpread(_objectSpread({}, state.days[dayId].categories), {}, {\n                [categoryName]: _objectSpread(_objectSpread({}, state.days[dayId].categories[categoryName]), {}, {\n                  cells: [...state.days[dayId].categories[categoryName].cells, cellName]\n                })\n              })\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","REMOVE_CELL","state","action","dayId","payload","day_id","categoryName","category_name","cellName","cell_name","type","days","categories","cells"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,EAA0CC,WAA1C,QAA6D,geAAe,UAASC,KAAK,GAAG,EAAjB,EAAqBC,MAArB,EAA6B;AACxC,QAAMC,KAAK,GAAGD,MAAM,CAACE,OAAP,CAAeC,MAA7B;AACA,QAAMC,YAAY,GAAGJ,MAAM,CAACE,OAAP,CAAeG,aAApC;AACA,QAAMC,QAAQ,GAAGN,MAAM,CAACE,OAAP,CAAeK,SAAhC;;AAEA,UAAOP,MAAM,CAACQ,IAAd;AACI,SAAKX,QAAL;AAAe;AACX,+CACOE,KADP;AAEIU,UAAAA,IAAI,kCACGV,KAAK,CAACU,IADT;AAEA,aAACR,KAAD,mCACOF,KAAK,CAACU,IAAN,CAAWR,KAAX,CADP;AAEIS,cAAAA,UAAU,kCACHX,KAAK,CAACU,IAAN,CAAWR,KAAX,EAAkBS,UADf;AAEN,iBAACN,YAAD,mCACOL,KAAK,CAACU,IAAN,CAAWR,KAAX,EAAkBS,UAAlB,CAA6BN,YAA7B,CADP;AAEIO,kBAAAA,KAAK,EAAE,CACH,GAAGZ,KAAK,CAACU,IAAN,CAAWR,KAAX,EAAkBS,UAAlB,CAA6BN,YAA7B,EAA2CO,KAD3C,EAEHL,QAFG;AAFX;AAFM;AAFd;AAFA;AAFR;AAmBH;;AAED;AACI,aAAOP,KAAP;AAxBR;AA0BH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL, REMOVE_CELL } from \"../actionTypes\"\n\n/* STRUCTURE OF THE STATE\n\nstate = {\n    days: {\n        [day_id]: {\n            categories: {\n                [category_name]: {\n                    cells: []\n                }\n            }\n        }\n    }\n} \nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CELL: {\n            return {\n                ...state,\n                days: {\n                    ...state.days,\n                    [action.payload.day_id]: {\n                        ...state.days[action.payload.day_id],\n                        categories: {\n                            ...state.days[action.payload.day_id].categories,\n                            [action.payload.category_name]: {\n                                ...state.days[action.payload.day_id].categories[action.payload.category_name],\n                                cells: [\n                                    ...state.days[action.payload.day_id].categories[action.payload.category_name].cells,\n                                    action.payload.cell_name\n                                ]\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        default:\n            return state\n    }\n}*/\n\n/* STRUCTURE OF THE STATE - 2\n\nstate = {\n    days: {\n        byId: {\n            \"1.Jan.2021\": {\n                id: \"1.Jan.2021\",\n                categories: [],\n                cells: []\n            }\n        },\n        allIds: {\n            [\"1.Jan.2021\", 2.Jan.2021]\n        }\n    },\n    categories: {\n        byId: {\n            \"food\": {\n                id: \"food\",\n                cells: []\n            },\n            \"mood\": {\n                id: \"mood\",\n                cells: []\n            }\n        },\n        allIds: {\n            [\"food\", \"mood\"]\n        }\n    },\n    cells: {\n        byId: {\n            \"bread\": {\n                id: \"bread\",\n                category: \"food\"\n            },\n            \"happy\": {\n                id: \"happy\",\n                category: \"mood\"\n            }\n        },\n        allIds: {\n            [\"bread\", \"happy\"]\n        }\n    }\n} */\n\n/* STRUCTURE OF THE STATE - 3\nstate = {\n    days: {\n        [day_id]: {\n            categories: {\n                [category_name]: {\n                    cells: []\n                }\n            }\n        }\n    },\n    cells: {\n        [cell_name]: {\n            category: \"\",\n            days: []\n        }\n    }\n} */\n\n\n\nexport default function(state = {}, action) {\n    const dayId = action.payload.day_id\n    const categoryName = action.payload.category_name\n    const cellName = action.payload.cell_name\n\n    switch(action.type) {\n        case ADD_CELL: {\n            return {\n                ...state,\n                days: {\n                    ...state.days,\n                    [dayId]: {\n                        ...state.days[dayId],\n                        categories: {\n                            ...state.days[dayId].categories,\n                            [categoryName]: {\n                                ...state.days[dayId].categories[categoryName],\n                                cells: [\n                                    ...state.days[dayId].categories[categoryName].cells,\n                                    cellName\n                                ]\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}