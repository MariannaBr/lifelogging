{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/CategoryChart.js\";\nimport dynamic from \"next/dynamic\";\nimport chartOptions from \"../helpers/chartOptions\";\nimport simplifyDate from \"../helpers/simplifyDate\";\nvar Chart = dynamic(_c = function _c() {\n  return import(\"react-apexcharts\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-apexcharts\")];\n    },\n    modules: [\"react-apexcharts\"]\n  }\n});\n_c2 = Chart;\n\nfunction CategoryChart(props) {\n  var dataY = {}; // giving 0 to every cell in every chart day, default values for chart\n  // inputs: chartDays [\"\", \"\"], defaultCells [{name:\"\"}, {name:\"\"}, {name:\"\"}]\n  // for (var i=0; i<props.chartDays.length;i++) {\n  //     dataY[props.chartDays[i]] = {}\n  //     for (var j=0; j<props.defaultCells.length; j++) {\n  //         dataY[props.chartDays[i]][props.defaultCells[j].name] = 0\n  //     }\n  // }\n\n  props.chartDays.forEach(function (day) {\n    dataY[day] = {};\n    props.defaultCells.forEach(function (cell) {\n      dataY[day][cell.name] = 0;\n    });\n  }); // giving 1 to cell in day when it happened, data from store\n  // inputs: storeDaysValues [{id:\"\", cells:[]}, {id:\"\", cells:[]}]\n  // for (var i=0; i<props.storeDaysValues.length; i++) {\n  //     for (j=0; j<props.storeDaysValues[i].cells.length; j++) {\n  //         dataY[props.storeDaysValues[i].id][props.storeDaysValues[i].cells[j]] = 1\n  //     }\n  // }\n\n  props.storeDaysValues.forEach(function (day) {\n    day.cells.forEach(function (cell) {\n      dataY[day.id][cell] = 1;\n    });\n  });\n  var Series = props.defaultCells.map(function (cell) {\n    return {\n      name: cell.name,\n      data: props.chartDays.map(function (day) {\n        return {\n          x: simplifyDate(day),\n          y: dataY[day][cell.name]\n        };\n      })\n    };\n  });\n  var chartWidth = (props.chartDays.length * 15).toString();\n  var chartHeight = (props.defaultCells.length * 50).toString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-lg w-1/5 font-semibold text-\".concat(props.color, \"-400\"),\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: chartOptions(props.color),\n        series: Series,\n        type: \"heatmap\",\n        width: chartWidth,\n        height: chartHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = CategoryChart;\nexport default CategoryChart;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Chart$dynamic\");\n$RefreshReg$(_c2, \"Chart\");\n$RefreshReg$(_c3, \"CategoryChart\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/CategoryChart.js"],"names":["dynamic","chartOptions","simplifyDate","Chart","ssr","CategoryChart","props","dataY","chartDays","forEach","day","defaultCells","cell","name","storeDaysValues","cells","id","Series","map","data","x","y","chartWidth","length","toString","chartHeight","color"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,IAAMC,KAAK,GAAGH,OAAO,MAAC;AAAA,SAAM,OAAQ,kBAAR,CAAN;AAAA,CAAD,EAAoC;AAACI,EAAAA,GAAG,EAAE,KAAN;AAAA;AAAA;AAAA,kCAArB,kBAAqB;AAAA;AAAA,cAArB,kBAAqB;AAAA;AAAA,CAApC,CAArB;MAAMD,K;;AAEN,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,MAAIC,KAAK,GAAG,EAAZ,CAF0B,CAI1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC3BH,IAAAA,KAAK,CAACG,GAAD,CAAL,GAAa,EAAb;AACAJ,IAAAA,KAAK,CAACK,YAAN,CAAmBF,OAAnB,CAA2B,UAAAG,IAAI,EAAI;AAC/BL,MAAAA,KAAK,CAACG,GAAD,CAAL,CAAWE,IAAI,CAACC,IAAhB,IAAwB,CAAxB;AACH,KAFD;AAGH,GALD,EAb0B,CAoB1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,EAAAA,KAAK,CAACQ,eAAN,CAAsBL,OAAtB,CAA8B,UAAAC,GAAG,EAAI;AACjCA,IAAAA,GAAG,CAACK,KAAJ,CAAUN,OAAV,CAAkB,UAAAG,IAAI,EAAI;AACtBL,MAAAA,KAAK,CAACG,GAAG,CAACM,EAAL,CAAL,CAAcJ,IAAd,IAAsB,CAAtB;AACH,KAFD;AAGH,GAJD;AAMA,MAAMK,MAAM,GAAGX,KAAK,CAACK,YAAN,CAAmBO,GAAnB,CAAuB,UAACN,IAAD,EAAU;AAC5C,WAAO;AACHC,MAAAA,IAAI,EAAED,IAAI,CAACC,IADR;AAEHM,MAAAA,IAAI,EAAEb,KAAK,CAACE,SAAN,CAAgBU,GAAhB,CAAoB,UAACR,GAAD,EAAS;AAC/B,eAAO;AACHU,UAAAA,CAAC,EAAElB,YAAY,CAACQ,GAAD,CADZ;AAEHW,UAAAA,CAAC,EAAEd,KAAK,CAACG,GAAD,CAAL,CAAWE,IAAI,CAACC,IAAhB;AAFA,SAAP;AAIH,OALK;AAFH,KAAP;AASH,GAVc,CAAf;AAYA,MAAMS,UAAU,GAAG,CAAChB,KAAK,CAACE,SAAN,CAAgBe,MAAhB,GAAuB,EAAxB,EAA4BC,QAA5B,EAAnB;AACA,MAAMC,WAAW,GAAG,CAACnB,KAAK,CAACK,YAAN,CAAmBY,MAAnB,GAA0B,EAA3B,EAA+BC,QAA/B,EAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,6CAAsClB,KAAK,CAACoB,KAA5C,SAAd;AAAA,gBACKpB,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEf,YAAY,CAACK,KAAK,CAACoB,KAAP,CAA5B;AAA2C,QAAA,MAAM,EAAET,MAAnD;AAA2D,QAAA,IAAI,EAAC,SAAhE;AAA0E,QAAA,KAAK,EAAEK,UAAjF;AAA6F,QAAA,MAAM,EAAEG;AAArG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;MA5DQpB,a;AA8DT,eAAeA,aAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport chartOptions from \"../helpers/chartOptions\"\nimport simplifyDate from \"../helpers/simplifyDate\"\n\nconst Chart = dynamic(() => import (\"react-apexcharts\"), {ssr: false})\n\nfunction CategoryChart(props) {\n\n    let dataY = {}\n\n    // giving 0 to every cell in every chart day, default values for chart\n    // inputs: chartDays [\"\", \"\"], defaultCells [{name:\"\"}, {name:\"\"}, {name:\"\"}]\n    // for (var i=0; i<props.chartDays.length;i++) {\n    //     dataY[props.chartDays[i]] = {}\n    //     for (var j=0; j<props.defaultCells.length; j++) {\n    //         dataY[props.chartDays[i]][props.defaultCells[j].name] = 0\n    //     }\n    // }\n\n    props.chartDays.forEach(day => {\n        dataY[day] = {}\n        props.defaultCells.forEach(cell => {\n            dataY[day][cell.name] = 0\n        })\n    })\n\n    // giving 1 to cell in day when it happened, data from store\n    // inputs: storeDaysValues [{id:\"\", cells:[]}, {id:\"\", cells:[]}]\n    // for (var i=0; i<props.storeDaysValues.length; i++) {\n    //     for (j=0; j<props.storeDaysValues[i].cells.length; j++) {\n    //         dataY[props.storeDaysValues[i].id][props.storeDaysValues[i].cells[j]] = 1\n    //     }\n    // }\n\n    props.storeDaysValues.forEach(day => {\n        day.cells.forEach(cell => {\n            dataY[day.id][cell] = 1\n        })\n    })\n\n    const Series = props.defaultCells.map((cell) => {\n        return {\n            name: cell.name,\n            data: props.chartDays.map((day) => {\n                return {\n                    x: simplifyDate(day),\n                    y: dataY[day][cell.name]\n                }\n            })\n        }\n    })\n\n    const chartWidth = (props.chartDays.length*15).toString()\n    const chartHeight = (props.defaultCells.length*50).toString()\n\n    return (\n        <div className=\"flex flex-row\">\n            <div className={`text-lg w-1/5 font-semibold text-${props.color}-400`}>\n                {props.id}\n            </div>\n            <div>\n                <Chart options={chartOptions(props.color)} series={Series} type=\"heatmap\" width={chartWidth} height={chartHeight}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default CategoryChart\n\n"]},"metadata":{},"sourceType":"module"}