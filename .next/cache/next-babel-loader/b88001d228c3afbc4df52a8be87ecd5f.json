{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/CategoryChart.js\";\nimport dynamic from \"next/dynamic\";\nimport chartOptions from \"../helpers/chartOptions\";\nimport { storeDaysValue, storeDaysIds } from \"../helpers/storeDays\";\nimport { defaultDatas } from \"../helpers/defaultDays\";\nvar Chart = dynamic(_c = function _c() {\n  return import(\"react-apexcharts\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-apexcharts\")];\n    },\n    modules: [\"react-apexcharts\"]\n  }\n});\n_c2 = Chart;\n\nfunction CategoryChart(props) {\n  function cellHappenedToday(cell, chartDay) {\n    return storeDaysValues.reduce(function (total, day) {\n      if (day.id === chartDay) {\n        var storeCellsIds = Object.values(day.cells);\n\n        if (storeCellsIds.includes(cell)) {\n          return total + 1;\n        }\n      }\n\n      return total;\n    }, 0);\n  } // default chart series, generated for every cell\n\n\n  var defaultSeries = props.defaultCells.map(function (cell) {\n    return {\n      name: cell.name,\n      data: defaultDatas\n    };\n  });\n  var series = props.defaultCells.map(function (cell) {\n    return {\n      name: cell.name,\n      data: chartDays.map(function (day) {\n        return {\n          x: simplifyDate(day),\n          y: cellHappenedToday(cell.name, day)\n        };\n      })\n    };\n  });\n  var chartWidth = (chartDays.length * 15).toString();\n  var chartHeight = (props.defaultCells.length * 50).toString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-lg w-1/5 font-semibold text-\".concat(props.color, \"-400\"),\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: chartOptions(props.color),\n        series: defaultSeries,\n        type: \"heatmap\",\n        width: chartWidth,\n        height: chartHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = CategoryChart;\nexport default CategoryChart;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Chart$dynamic\");\n$RefreshReg$(_c2, \"Chart\");\n$RefreshReg$(_c3, \"CategoryChart\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/CategoryChart.js"],"names":["dynamic","chartOptions","storeDaysValue","storeDaysIds","defaultDatas","Chart","ssr","CategoryChart","props","cellHappenedToday","cell","chartDay","storeDaysValues","reduce","total","day","id","storeCellsIds","Object","values","cells","includes","defaultSeries","defaultCells","map","name","data","series","chartDays","x","simplifyDate","y","chartWidth","length","toString","chartHeight","color"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,sBAA7C;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,IAAMC,KAAK,GAAGL,OAAO,MAAC;AAAA,SAAM,OAAQ,kBAAR,CAAN;AAAA,CAAD,EAAoC;AAACM,EAAAA,GAAG,EAAE,KAAN;AAAA;AAAA;AAAA,kCAArB,kBAAqB;AAAA;AAAA,cAArB,kBAAqB;AAAA;AAAA,CAApC,CAArB;MAAMD,K;;AAEN,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,WAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,QAAjC,EAA2C;AACvC,WAAOC,eAAe,CAACC,MAAhB,CAAuB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC1C,UAAIA,GAAG,CAACC,EAAJ,KAAWL,QAAf,EAAyB;AACrB,YAAMM,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcJ,GAAG,CAACK,KAAlB,CAAtB;;AACA,YAAIH,aAAa,CAACI,QAAd,CAAuBX,IAAvB,CAAJ,EAAkC;AAC9B,iBAAOI,KAAK,GAAG,CAAf;AACH;AACJ;;AACD,aAAOA,KAAP;AACH,KARM,EAQJ,CARI,CAAP;AASH,GAZyB,CAc1B;;;AACA,MAAMQ,aAAa,GAAGd,KAAK,CAACe,YAAN,CAAmBC,GAAnB,CAAuB,UAACd,IAAD,EAAU;AACnD,WAAO;AACHe,MAAAA,IAAI,EAAEf,IAAI,CAACe,IADR;AAEHC,MAAAA,IAAI,EAAEtB;AAFH,KAAP;AAIH,GALqB,CAAtB;AAOA,MAAMuB,MAAM,GAAGnB,KAAK,CAACe,YAAN,CAAmBC,GAAnB,CAAuB,UAACd,IAAD,EAAU;AAC5C,WAAO;AACLe,MAAAA,IAAI,EAAEf,IAAI,CAACe,IADN;AAELC,MAAAA,IAAI,EAAEE,SAAS,CAACJ,GAAV,CAAc,UAACT,GAAD,EAAS;AACzB,eAAO;AACHc,UAAAA,CAAC,EAAEC,YAAY,CAACf,GAAD,CADZ;AAEHgB,UAAAA,CAAC,EAAEtB,iBAAiB,CAACC,IAAI,CAACe,IAAN,EAAYV,GAAZ;AAFjB,SAAP;AAIH,OALK;AAFD,KAAP;AASD,GAVY,CAAf;AAYA,MAAMiB,UAAU,GAAG,CAACJ,SAAS,CAACK,MAAV,GAAiB,EAAlB,EAAsBC,QAAtB,EAAnB;AACA,MAAMC,WAAW,GAAG,CAAC3B,KAAK,CAACe,YAAN,CAAmBU,MAAnB,GAA0B,EAA3B,EAA+BC,QAA/B,EAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,6CAAsC1B,KAAK,CAAC4B,KAA5C,SAAd;AAAA,gBACK5B,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEf,YAAY,CAACO,KAAK,CAAC4B,KAAP,CAA5B;AAA2C,QAAA,MAAM,EAAEd,aAAnD;AAAkE,QAAA,IAAI,EAAC,SAAvE;AAAiF,QAAA,KAAK,EAAEU,UAAxF;AAAoG,QAAA,MAAM,EAAEG;AAA5G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;MAhDQ5B,a;AAkDT,eAAeA,aAAf","sourcesContent":["import dynamic from \"next/dynamic\"\nimport chartOptions from \"../helpers/chartOptions\"\nimport { storeDaysValue, storeDaysIds } from \"../helpers/storeDays\"\nimport { defaultDatas } from \"../helpers/defaultDays\"\n\nconst Chart = dynamic(() => import (\"react-apexcharts\"), {ssr: false})\n\nfunction CategoryChart(props) {\n\n    function cellHappenedToday(cell, chartDay) {\n        return storeDaysValues.reduce((total, day) => {\n            if (day.id === chartDay) {\n                const storeCellsIds = Object.values(day.cells)\n                if (storeCellsIds.includes(cell)) {\n                    return total + 1\n                }\n            }               \n            return total \n        }, 0)\n    }\n\n    // default chart series, generated for every cell\n    const defaultSeries = props.defaultCells.map((cell) => {\n        return {\n            name: cell.name,\n            data: defaultDatas\n        }\n    })\n\n    const series = props.defaultCells.map((cell) => {\n        return {\n          name: cell.name,\n          data: chartDays.map((day) => {\n              return {\n                  x: simplifyDate(day),\n                  y: cellHappenedToday(cell.name, day)\n              }\n          })\n        }\n      })\n\n    const chartWidth = (chartDays.length*15).toString()\n    const chartHeight = (props.defaultCells.length*50).toString()\n\n    return (\n        <div className=\"flex flex-row\">\n            <div className={`text-lg w-1/5 font-semibold text-${props.color}-400`}>\n                {props.id}\n            </div>\n            <div>\n                <Chart options={chartOptions(props.color)} series={defaultSeries} type=\"heatmap\" width={chartWidth} height={chartHeight}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default CategoryChart\n\n"]},"metadata":{},"sourceType":"module"}