{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/FirebaseAuth.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nvar firebaseAuthConfig = {\n  signInFlow: 'popup',\n  signInOptions: [{\n    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    requireDisplayName: false\n  }, {\n    provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    requireDisplayName: true\n  }],\n  signInSuccessUrl: '/user',\n  credentialHelper: 'none',\n  callbacks: {\n    // https://github.com/firebase/firebaseui-web#signinsuccesswithauthresultauthresult-redirecturl\n    signInSuccessWithAuthResult: function signInSuccessWithAuthResult() {\n      return (// Don't automatically redirect. We handle redirecting based on\n        // auth state in withAuthComponent.js.\n        false\n      );\n    }\n  }\n};\n\nvar FirebaseAuth = function FirebaseAuth() {\n  _s();\n\n  var _useState = useState(false),\n      renderAuth = _useState[0],\n      setRenderAuth = _useState[1];\n\n  useEffect(function () {\n    if (true) {\n      setRenderAuth(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderAuth ? /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n      uiConfig: firebaseAuthConfig,\n      firebaseAuth: firebase.auth()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, _this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FirebaseAuth, \"Ar4U5ouqJl2OrtUFwf+zJoqK0bA=\");\n\n_c = FirebaseAuth;\nexport default FirebaseAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseAuth\");","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/FirebaseAuth.js"],"names":["useEffect","useState","StyledFirebaseAuth","firebase","firebaseAuthConfig","signInFlow","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","requireDisplayName","GoogleAuthProvider","signInSuccessUrl","credentialHelper","callbacks","signInSuccessWithAuthResult","FirebaseAuth","renderAuth","setRenderAuth"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,IAAMC,kBAAkB,GAAG;AACvBC,EAAAA,UAAU,EAAE,OADW;AAEvBC,EAAAA,aAAa,EAAE,CACX;AACIC,IAAAA,QAAQ,EAAEJ,QAAQ,CAACK,IAAT,CAAcC,iBAAd,CAAgCC,WAD9C;AAEIC,IAAAA,kBAAkB,EAAE;AAFxB,GADW,EAKX;AACIJ,IAAAA,QAAQ,EAAEJ,QAAQ,CAACK,IAAT,CAAcI,kBAAd,CAAiCF,WAD/C;AAEIC,IAAAA,kBAAkB,EAAE;AAFxB,GALW,CAFQ;AAYvBE,EAAAA,gBAAgB,EAAE,OAZK;AAavBC,EAAAA,gBAAgB,EAAE,MAbK;AAcvBC,EAAAA,SAAS,EAAE;AACP;AACAC,IAAAA,2BAA2B,EAAE;AAAA,aAC7B;AACA;AACA;AAH6B;AAAA;AAFtB;AAdY,CAA3B;;AAuBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,kBACahB,QAAQ,CAAC,KAAD,CADrB;AAAA,MAChBiB,UADgB;AAAA,MACJC,aADI;;AAEvBnB,EAAAA,SAAS,CAAC,YAAM;AACZ,cAAoC;AAChCmB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACI;AAAA,cACKD,UAAU,gBACP,QAAC,kBAAD;AACI,MAAA,QAAQ,EAAEd,kBADd;AAEI,MAAA,YAAY,EAAED,QAAQ,CAACK,IAAT;AAFlB;AAAA;AAAA;AAAA;AAAA,aADO,GAKP;AANR;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAjBD;;GAAMS,Y;;KAAAA,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst firebaseAuthConfig = {\n    signInFlow: 'popup',\n    signInOptions: [\n        {\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n            requireDisplayName: false\n        },\n        {\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            requireDisplayName: true\n        }\n    ],\n    signInSuccessUrl: '/user',\n    credentialHelper: 'none',\n    callbacks: {\n        // https://github.com/firebase/firebaseui-web#signinsuccesswithauthresultauthresult-redirecturl\n        signInSuccessWithAuthResult: () =>\n        // Don't automatically redirect. We handle redirecting based on\n        // auth state in withAuthComponent.js.\n        false,\n    },\n}\n\nconst FirebaseAuth = () => {\n    const [renderAuth, setRenderAuth] = useState(false)\n    useEffect(() => {\n        if ( typeof window !== 'undefined') {\n            setRenderAuth(true)\n        }\n    }, [])\n    return (\n        <div>\n            {renderAuth ? (\n                <StyledFirebaseAuth\n                    uiConfig={firebaseAuthConfig}\n                    firebaseAuth={firebase.auth()}\n                />\n            ) : null}\n        </div>\n    )\n}\nexport default FirebaseAuth"]},"metadata":{},"sourceType":"module"}