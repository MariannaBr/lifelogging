{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\";\nimport { today } from \"../../components/Today\";\nvar dayId = today;\nvar initialState = {\n  category: \"\",\n  cells: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CATEGORY:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          category: [].concat(_toConsumableArray(state.category), [action.payload])\n        });\n      }\n\n    case ADD_CELL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          category: _toConsumableArray(state.category),\n          cells: [].concat(_toConsumableArray(state.cells), [action.payload])\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mana/c/lifelogging/redux/reducers/cellReducer.js"],"names":["ADD_DAY","ADD_CATEGORY","ADD_CELL","today","dayId","initialState","category","cells","state","action","type","payload"],"mappings":";;;;;;;AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,QAAgD,gBAAhD;AACA,SAAQC,KAAR,QAAoB,wBAApB;AAEA,IAAIC,KAAK,GAAGD,KAAZ;AAEA,IAAME,YAAY,GAAG;AAACC,EAAAA,QAAQ,EAAC,EAAV;AAAcC,EAAAA,KAAK,EAAC;AAApB,CAArB;AAGA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,YAAL;AAAmB;AACf,+CACOO,KADP;AAEIF,UAAAA,QAAQ,+BAAME,KAAK,CAACF,QAAZ,IAAsBG,MAAM,CAACE,OAA7B;AAFZ;AAIH;;AAED,SAAKT,QAAL;AAAe;AACX,+CACOM,KADP;AAEIF,UAAAA,QAAQ,qBAAME,KAAK,CAACF,QAAZ,CAFZ;AAGIC,UAAAA,KAAK,+BAAMC,KAAK,CAACD,KAAZ,IAAmBE,MAAM,CAACE,OAA1B;AAHT;AAKH;;AACD;AACI,aAAOH,KAAP;AAhBR;AAkBH","sourcesContent":["import { ADD_DAY, ADD_CATEGORY, ADD_CELL } from \"../actionTypes\"\nimport {today} from \"../../components/Today\"\n\nlet dayId = today\n\nconst initialState = {category:\"\", cells:[]}\n\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_CATEGORY: {\n            return {\n                ...state,\n                category: [...state.category, action.payload]\n                }\n        }\n            \n        case ADD_CELL: {\n            return {\n                ...state,\n                category: [...state.category],\n                cells: [...state.cells, action.payload]\n            }\n        }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}