{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mana/c/lifelogging/components/ChartAll.js\";\nimport { useSelector } from \"react-redux\";\n\nconst selectDays = state => state.categories.days;\n\nfunction ChartAll(props) {\n  const days = useSelector(selectDays);\n  const daysValues = Object.values(days); // get array of days' ids [\"\", \"\"]\n\n  function getDays(data) {\n    const days = Object.values(data).map(day => day.id);\n    return days;\n  } // Array of arrays of objects - categories [[{}, {}], [{}, {}]]\n\n\n  const categories = daysValues.map(day => Object.values(day.categories)); //console.log(categories)\n  // Array of arrays of ids [[\"\", \"\", \"\"], [\"\", \"\", \"\"]]\n\n  const categoriesIds = categories.map(category => category.map(cat => cat.id)); //console.log(categoriesIds)\n  // Array of arrays of arrays of cells [[[\"\",\"\"],[\"\",\"\"]],[[\"\",\"\"],[\"\",\"\"]]]\n\n  const cells = categories.map(category => category.map(cat => cat.cells)); //console.log(cells)\n\n  function getCategoriesofDay(day, data) {\n    let categories = [];\n    data.forEach(item => {\n      console.log(\"day\", day, \"item\", item);\n\n      if (item.id === day) {\n        categories = Object.values(item.categories).map(cat => cat.id);\n      }\n    });\n    console.log(categories);\n    return categories;\n  }\n\n  function getDays(data) {\n    const days = Object.values(data).map(day => day.id);\n    return days;\n  }\n\n  getCategoriesofDay(getDays(days)[1], daysValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\nexport default ChartAll;","map":{"version":3,"sources":["/home/mana/c/lifelogging/components/ChartAll.js"],"names":["useSelector","selectDays","state","categories","days","ChartAll","props","daysValues","Object","values","getDays","data","map","day","id","categoriesIds","category","cat","cells","getCategoriesofDay","forEach","item","console","log"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,IAA7C;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAMF,IAAI,GAAGJ,WAAW,CAACC,UAAD,CAAxB;AACA,QAAMM,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAnB,CAHqB,CAKrB;;AACA,WAASM,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,UAAMP,IAAI,GAAGI,MAAM,CAACC,MAAP,CAAcE,IAAd,EAAoBC,GAApB,CAAyBC,GAAD,IAASA,GAAG,CAACC,EAArC,CAAb;AACA,WAAOV,IAAP;AACH,GAToB,CAYrB;;;AACA,QAAMD,UAAU,GAAGI,UAAU,CAACK,GAAX,CAAgBC,GAAD,IAASL,MAAM,CAACC,MAAP,CAAcI,GAAG,CAACV,UAAlB,CAAxB,CAAnB,CAbqB,CAcrB;AAEA;;AACA,QAAMY,aAAa,GAAGZ,UAAU,CAACS,GAAX,CAAgBI,QAAD,IAAcA,QAAQ,CAACJ,GAAT,CAAcK,GAAD,IAASA,GAAG,CAACH,EAA1B,CAA7B,CAAtB,CAjBqB,CAkBrB;AAEA;;AACA,QAAMI,KAAK,GAAGf,UAAU,CAACS,GAAX,CAAgBI,QAAD,IAAcA,QAAQ,CAACJ,GAAT,CAAcK,GAAD,IAASA,GAAG,CAACC,KAA1B,CAA7B,CAAd,CArBqB,CAsBrB;;AAGA,WAASC,kBAAT,CAA4BN,GAA5B,EAAiCF,IAAjC,EAAuC;AACnC,QAAIR,UAAU,GAAG,EAAjB;AACAQ,IAAAA,IAAI,CAACS,OAAL,CAAcC,IAAD,IAAU;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBV,GAAnB,EAAwB,MAAxB,EAAgCQ,IAAhC;;AACA,UAAIA,IAAI,CAACP,EAAL,KAAYD,GAAhB,EAAqB;AACjBV,QAAAA,UAAU,GAAGK,MAAM,CAACC,MAAP,CAAcY,IAAI,CAAClB,UAAnB,EAA+BS,GAA/B,CAAoCK,GAAD,IAASA,GAAG,CAACH,EAAhD,CAAb;AACH;AACJ,KALD;AAMAQ,IAAAA,OAAO,CAACC,GAAR,CAAYpB,UAAZ;AACA,WAAOA,UAAP;AACH;;AAED,WAASO,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,UAAMP,IAAI,GAAGI,MAAM,CAACC,MAAP,CAAcE,IAAd,EAAoBC,GAApB,CAAyBC,GAAD,IAASA,GAAG,CAACC,EAArC,CAAb;AACA,WAAOV,IAAP;AACH;;AAEDe,EAAAA,kBAAkB,CAACT,OAAO,CAACN,IAAD,CAAP,CAAc,CAAd,CAAD,EAAmBG,UAAnB,CAAlB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;AAED,eAAeF,QAAf","sourcesContent":["import { useSelector } from \"react-redux\"\n\nconst selectDays = state => state.categories.days\n\nfunction ChartAll(props) {\n    \n    const days = useSelector(selectDays)\n    const daysValues = Object.values(days)\n\n    // get array of days' ids [\"\", \"\"]\n    function getDays(data) {\n        const days = Object.values(data).map((day) => day.id)\n        return days\n    }\n\n\n    // Array of arrays of objects - categories [[{}, {}], [{}, {}]]\n    const categories = daysValues.map((day) => Object.values(day.categories))\n    //console.log(categories)\n\n    // Array of arrays of ids [[\"\", \"\", \"\"], [\"\", \"\", \"\"]]\n    const categoriesIds = categories.map((category) => category.map((cat) => cat.id))\n    //console.log(categoriesIds)\n\n    // Array of arrays of arrays of cells [[[\"\",\"\"],[\"\",\"\"]],[[\"\",\"\"],[\"\",\"\"]]]\n    const cells = categories.map((category) => category.map((cat) => cat.cells))\n    //console.log(cells)\n\n\n    function getCategoriesofDay(day, data) {\n        let categories = []\n        data.forEach((item) => {\n            console.log(\"day\", day, \"item\", item)\n            if (item.id === day) {\n                categories = Object.values(item.categories).map((cat) => cat.id)\n            }\n        })\n        console.log(categories)\n        return categories\n    }\n\n    function getDays(data) {\n        const days = Object.values(data).map((day) => day.id)\n        return days\n    }\n\n    getCategoriesofDay(getDays(days)[1], daysValues)\n\n    return (\n        <div>\n            Chart\n        </div>\n    )\n\n}\n\nexport default ChartAll"]},"metadata":{},"sourceType":"module"}